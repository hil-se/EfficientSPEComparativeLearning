Issue,Storypoint
"Add MULE_REMOTE_CLIENT_ADDRESS property in the new HTTP connector
The HTTP transport sets a variable with the address of the client in inbound connections, but is able to detect if the request comes from a proxy (if so, the value of the X-Forwarded-For header is used instead of the IP of the proxy). This is explained in MULE-7263. We need to provide this functionality in the new HTTP connector.",5
"HTTP requester not sending query parameters when processing a redirect under HTTPS
Check the behavior of redirects in the http:request element of the new HTTP module when using HTTPS. If the Location header contains a URL with query parameters, the request to that URL doesn't contain the parameters.  To reproduce, check AuthorizationCodeFullConfigTestCase#localAuthorizationUrlRedirectsToOAuthAuthorizationUrl. MuleClient is being used twice, to manually process redirects, replace that with only one call with enabled redirects.",8
"Upgrade schema versions to 3.6
Upgrade schema versions to 3.6",1
"The application logging configuration is not read or used.
When deploying an app with a logging congif (log4j2.xml), mule doesnt use its config and use the default every time.    Steps to reproduce:  Deploy the attached app on a mule instance.  Wait for it to be deployed.  The default app log will be created no matter which configuration was given.    Expected behavior:  Log into the configured file instead of the default one, if using Console, should log into mule_ee.log or mule.log (depending on the distribution).      ",1
"HTTP Requester not removing previous inbound properties
The http:request sets inbound properties to the resulting Mule message but keeps any previous inbound property that were set before the request. To reproduce, test the proxy scenario using a flow with an http:listener and an http:request. When returning from the request, the Mule message still has inbound properties from the listener.",3
"TCP Transport creating MULE_REMOTE_CLIENT_ADDRESS as outbound
While working on STUDIO-5148, the team found that TCP is creating the MULE_REMOTE_CLIENT_ADDRESS as outbound property rather than inbound as per our way to adapt messages and the way we set that property everywhere else.    https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/transports/tcp/src/main/java/org/mule/transport/tcp/TcpMessageReceiver.java#L421  ",3
"Default maxThreads is 128 when worker-threading-profile isn't present but 16 when it is.
As title..",3
"Http Listener Module Path Issue with path with wildcard and another hardcoded in the same port and with spaces in the path
When there are two listeners in the same port but one has a wildcard the other has a hardcoded path and there is a collision between them it has to enter in the listener that has the hardcoded path.     For example:    1) Flow with path = ""/in"" and another flow with path = ""/in/* ""  It enters in the /in/* listener but it should enter in the ""/in"" without wildcard    2) path=""/in/*/subpath1""  path=/in/*  When you consume it with ""/in/foo1/subpath1"" it goes to the path /in/*    3) Similar to the previous case.  path=""/in/*/subpath1/*"" and Path=/in/*     When you consume it with ""/in/foo1/subpath1/subpath2"" it goes with the /in/*    4) path=""/encodedValues/foo 1""  and you consume it with /encodedValues/foo%201 it returns a 404.    For all of these cases there are Functional Test Cases inside the System folder of the HTTP module tests:    *HttpListenerPathTestCase  ",3
"ArrayIndexOutOfBoundsException when logging exceptions
Sometimes, when logging an exception with a RollingFileAppender an ArrayIndexOutOfBoundsException is thrown.  ",1
"Tests Infrastructure modules build warning
When running mvn validate on mule-tests-infrastructure module I get a warning because there is a duplicated declaration of maven-jar-plugin in mule pom.xml.    {noformat}  [INFO] Scanning for projects...  [WARNING]   [WARNING] Some problems were encountered while building the effective model for org.mule.tests:mule-tests-infrastructure:jar:3.7.0-M1-SNAPSHOT  [WARNING] 'build.plugins.plugin.(groupId:artifactId)' must be unique but found duplicate declaration of plugin org.apache.maven.plugins:maven-jar-plugin @ org.mule:mule:3.7.0-M1-SNAPSHOT, /Users/alejandrosequeira/dev/mule/ce/pom.xml, line 1803, column 21  [WARNING]   [WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.  [WARNING]   [WARNING] For this reason, future Maven versions might no longer support building such malformed projects.  [WARNING]   [INFO]   [INFO] Using the builder org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder with a thread count of 1  [INFO]                                                                           [INFO] ------------------------------------------------------------------------  [INFO] Building Mule Tests Infrastructure 3.7.0-M1-SNAPSHOT  [INFO] ------------------------------------------------------------------------  [INFO]   [INFO] --- maven-enforcer-plugin:1.0.1:enforce (enforce-maven-version) @ mule-tests-infrastructure ---  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESS  [INFO] ------------------------------------------------------------------------  [INFO] Total time: 1.269 s  [INFO] Finished at: 2014-12-02T16:40:14-03:00  [INFO] Final Memory: 9M/246M  [INFO] ------------------------------------------------------------------------  {noformat}",1
"Change IO strategy in HTTP requester
Use SameThreadIOStrategy in the outbound part of he new http connector. As the exchange pattern is always request-response it makes no sense to use a different thread worker to process the request.",3
"CXF proxy test seems to be slower with the new http module than with the http transport.
The ProxyTestCase with proxy-conf-flow.xml as config file runs for 1 minute and 25 seconds, but with proxy-newhttp-conf-flow.xml (using the new http module) it runs for 3 minutes and 15 seconds.",8
"Error in the XML Parser of the HTTP Module when the Header tag is used with the Error Response Builder
This exception is throw when there is an Error Response Builder:     ""nested exception is java.lang.IllegalStateException: No parser defined for header in the context error-response-builder""",3
"StringIndexOutOfBoundsException when requester receives GET with wrong body
When sending a GET with content-type application/x-www-form-urlencoded and an incorrect form body it returns an empty response due to a java.lang.StringIndexOutOfBoundsException.    To reproduce run the following command using the configuration:    {noformat}  $curl -G --data 'hello' http://localhost:8080/1  curl: (52) Empty reply from server  {noformat}    ",3
"Max connections exceeded in the outbound part should block instead of failing
When running the proxy scenario under more than 10 concurrent threads, the requests starts to fail due max connections limit exceeded. This parameter is not set, so this should be the default ""-1""... no limit.    The tcp configuration has been removed from the requester to asure that this issue is probably from the listener.    Also on the core log this exception has been found:  dic 03, 2014 3:07:20 PM org.glassfish.grizzly.nio.transport.TCPNIOTransport configureChannel  WARNING: GRIZZLY0004: Can not set TCP_NODELAY to true  java.net.SocketException: Invalid argument    sun.nio.ch.Net.setIntOption0(Native Method)    sun.nio.ch.Net.setSocketOption(Net.java:373)    sun.nio.ch.SocketChannelImpl.setOption(SocketChannelImpl.java:189)    sun.nio.ch.SocketAdaptor.setBooleanOption(SocketAdaptor.java:295)    sun.nio.ch.SocketAdaptor.setTcpNoDelay(SocketAdaptor.java:330)    org.glassfish.grizzly.nio.transport.TCPNIOTransport.configureChannel(TCPNIOTransport.java:445)    org.glassfish.grizzly.nio.transport.TCPNIOConnectorHandler.onConnectedAsync(TCPNIOConnectorHandler.java:214)    org.glassfish.grizzly.nio.transport.TCPNIOConnectorHandler$1.connected(TCPNIOConnectorHandler.java:154)    org.glassfish.grizzly.nio.transport.TCPNIOConnection.onConnect(TCPNIOConnection.java:258)    org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:552)    org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112)    org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117)    org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.executeIoEvent(WorkerThreadIOStrategy.java:103)    org.glassfish.grizzly.strategies.AbstractIOStrategy.executeIoEvent(AbstractIOStrategy.java:89)    org.glassfish.grizzly.nio.SelectorRunner.iterateKeyEvents(SelectorRunner.java:414)    org.glassfish.grizzly.nio.SelectorRunner.iterateKeys(SelectorRunner.java:383)    org.glassfish.grizzly.nio.SelectorRunner.doSelect(SelectorRunner.java:347)    org.glassfish.grizzly.nio.SelectorRunner.run(SelectorRunner.java:278)    org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:565)    org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:545)    java.lang.Thread.run(Thread.java:745)    dic 03, 2014 3:07:20 PM org.glassfish.grizzly.nio.transport.TCPNIOTransport configureChannel  WARNING: GRIZZLY0006: Can not set SO_REUSEADDR to true  java.net.SocketException: Invalid argument    sun.nio.ch.Net.setIntOption0(Native Method)    sun.nio.ch.Net.setSocketOption(Net.java:373)    sun.nio.ch.SocketChannelImpl.setOption(SocketChannelImpl.java:189)    sun.nio.ch.SocketAdaptor.setBooleanOption(SocketAdaptor.java:295)    sun.nio.ch.SocketAdaptor.setReuseAddress(SocketAdaptor.java:413)    org.glassfish.grizzly.nio.transport.TCPNIOTransport.configureChannel(TCPNIOTransport.java:451)    org.glassfish.grizzly.nio.transport.TCPNIOConnectorHandler.onConnectedAsync(TCPNIOConnectorHandler.java:214)    org.glassfish.grizzly.nio.transport.TCPNIOConnectorHandler$1.connected(TCPNIOConnectorHandler.java:154)    org.glassfish.grizzly.nio.transport.TCPNIOConnection.onConnect(TCPNIOConnection.java:258)    org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:552)    org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112)    org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:117)    org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.executeIoEvent(WorkerThreadIOStrategy.java:103)    org.glassfish.grizzly.strategies.AbstractIOStrategy.executeIoEvent(AbstractIOStrategy.java:89)    org.glassfish.grizzly.nio.SelectorRunner.iterateKeyEvents(SelectorRunner.java:414)    org.glassfish.grizzly.nio.SelectorRunner.iterateKeys(SelectorRunner.java:383)    org.glassfish.grizzly.nio.SelectorRunner.doSelect(SelectorRunner.java:347)    org.glassfish.grizzly.nio.SelectorRunner.run(SelectorRunner.java:278)    org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:565)    org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:545)    java.lang.Thread.run(Thread.java:745)    ",8
"Jetty http.context.path inbound property has a different value in 3.6 compared to 3.5
The jetty transport in 3.6.0-M3 is setting the http.context.path inbound property to a different value than 3.5    given the following endpoint address and request:    	endpoint address:  http://localhost:8080/api  	request:                 http://localhost:8080/api/console/index.html    in 3.6 we get:	  	http.context.path: /api/console/index.html    and in 3.5 the value was:	  	http.context.path: /api    the 3.5 behavior is the expected one.  ",5
"Resource Not Found in HTTP should return a body with a clear message
HTTP Module returns 404 when a valid port is hit but there's no listener in it.",3
"HTTP Listener Module is not adding the WWW-Authenticate header field in the response 
When you send bad basic credentials for authentication the response of the listener is not adding the WWW-Authenticate header field.     But in the case you don't send the authentication header credential it includes the WWW-Authenticate header field.     As I understand in the RFC (http://tools.ietf.org/html/rfc2616#section-10.4.2) the server has to add the WWW-Authenticate header field in both scenarios.    ",5
"HTTP Listener config throws NPE when a request is received but no listener is referencing the config
When no listener is referencing a listener-config, and a request is received in the configured port, a NPE is thrown in the server.    To reproduce, add this listener-config:      <http:listener-config name=""customConfig"" host=""localhost"" port=""1234""/>    Run the app, and then hit with a browser http://localhost:1234",3
"Null pointer exception on the first request causes the listener to close the connection.
When loading the application, the first request fails to be processed due an exception and after that no connection can be created, probably the listener's socket is close on the exception.",5
"HTTP listener not setting exception payload.
There's a scenario in CXF where an exception is thrown after calling an HTTP listener. An exception payload is expected but you get null.  Test is testServerClientProxyDefaultException and can be found in ExceptionStrategyTestCase.",2
"Log separation doesn't work after upgrading to log4j 2.1
Because of a change in Log4j's lifecycle, after upgrading to 2.1 the application logs never load their configuration which in practice means that log separation is disabled even though applications do have a separate logging context.",3
"JUL loggers are not bridged to log4j2
Components like jersey and Grizzly are logging using JUL but that API is not bridged to log4j2.    JUL loggers should have the same treatment as the others do",3
"Thread names are i) lacking app prefix ii) duplicated between http inbound and outbound
I have checked this is not an issue for per-app logging, but I beleive it's an issue for MMC and possibly other things.  It's also bad practice to repeat thread names.  ",3
"HTTP Listener is storing only the first part of a MultiPart request as attachment
given the following request using RestAssured:    {code}  given()      .multiPart(""description"", ""Barcelona Badge"")      .multiPart(""image"", ""bbva.jpg"", this.getClass().getClassLoader().getResourceAsStream(""org/mule/module/apikit/leagues/bbva.jpg""))    .expect()      .statusCode(200)      .body(""upload"", is(""OK""))    .when()      .put(""/api/leagues/liga-bbva/badge"");  {code}    only the first part (""description"") is being stored as an inboundAttachment.    Using http:inbound instead of listener generates both attachments as expected.    failing test using listener:  https://github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/LeaguesHttpListenerTestCase.java    passing test using endpoint:  https://github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/LeaguesTestCase.java    in both classes the test in question is putMultiPartFormData()",8
"Cannot add ContextResolver in Jersey Module
When trying to add a context-resolver in 3.6.0 it seems that Mule don't do anything. To reproduce download the attached project and run mvn clean test using mule.version 3.6.0-M3-SNAPSHOT (the current value) and see that it doesn't fail. If you use 3.5.0 it fails.",5
"Grizzly thread leaks
When running the CE test suite, you can see grizzly threads piling up to the point in which by the time the suite is almost over there's a gigantic amount of idle threads.    This leads to flakiness and in some environments it even fails the build because the host can't allocate more threads.    Additionally, it raises the concern about those threads being actually stopped when an application is undeployed on a live container.    Please trace and fix the leak and verify that those threads do not survive an application undeployment.",8
"Support doc/literal with multiple message parts in ws consumer
WS Consumer should support doc/literal web services that have multiple message parts inside them.     Note: since WS consumer sets the payload to the body of the SOAP message, this means that it will have to have a wrapper element around the message parts.",13
"WS Encryption support for WS Consumer
We should support WS Security encryption/decryption capabilities in WS consumer.",8
"WS Security Signature support for WS consumer
We should support WS Security signature and verification capabilities in WS consumer.",8
"HTTP Connector OAuth Implicit Credentials
Need to support OAuth implicit credentials for new HTTP connector.",8
"Malformed responses when Jersey sends a chuncked response
When a Jersey endpoint responds with a chuncked response, then the chunks are not correctly formed and the last one is not correctly finialized.    As a result, the response is garbled. ",5
"Create examples for HTTP module documentation
Create exmaples to include in documentation for new HTTP Module.",13
"It isn't possible to set the module HTTP Listener Config and an Oauth Provider in the same Port
As the Mule Oauth Provider use the HTTP Transport you can't set the same port in the provider and the Http Module Configs of the flows that have the resources.    Also there is a problem when you change the port of the Provider to not overlap them and deploy the app because it goes on with the error of ""BindException: Address already in use"". You have to stop the Mule Standalone and started again.",13
"java.lang.IllegalStateException: Only owner thread can write to message still occures with http module
.",5
"100% errors with http listener under high concurrency
100% Failures at 8000 concurrency.  Http transport only has 0.32% failures, and jetty none.",8
"HTTP listener fails with NPE when the message is filtered out
The following config is failing with NPE. It doesn't fail when the message is not filtered out.  Error:  java.lang.NullPointerException    org.mule.module.http.internal.listener.HttpResponseBuilder.build(HttpResponseBuilder.java:77) ~[mule-module-http-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]    org.mule.module.http.internal.listener.HttpMessageProcessorTemplate.sendResponseToClient(HttpMessageProcessorTemplate.java:87) ~[mule-module-http-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]    org.mule.execution.AsyncResponseFlowProcessingPhase.runPhase(AsyncResponseFlowProcessingPhase.java:56) ~[mule-core-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]    org.mule.execution.AsyncResponseFlowProcessingPhase.runPhase(AsyncResponseFlowProcessingPhase.java:23) ~[mule-core-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]",5
"Requests randomly fail (1 in 1M) with NPE, even at low conconcurrencies e.g. 50
Around 10 times in a million requests, the request fails due a null pointer exception caused by the future returning null instead of a valid response.    Class and line:  org.mule.module.http.internal.request.grizzly.GrizzlyHttpClient#send              response = future.get(responseTimeout, TimeUnit.MILLISECONDS);  ",8
"Spike on execution model of extensions api
Make it execute operations",13
"Make a Spike on consolidating all mule registries into a Spring one
Make a Spike on consolidating all mule registries into a Spring one",13
"Remove byte as a DataQualifier
Remove it",1
"Refactor transport discovery for OSGi
Current transport discovery mechanism inspects all available jars searching for service properties files. That must be modified to work on an OSGi container.  In OSGi, transport discovery should follow white-board model so a transport service can be used (with no OSGi knowledge) which would enable test running with not container to be able to properly create the mule context.",8
"Redesign context builder discovery for OSGi
Current context builder discovery mechanism inspects all available jars searching for service properties files. That must be modified to work on an OSGi container.  In OSGi, transport discovery should follow white-board model so a context builder service can be used (with no OSGi knowledge) which would enable test running with not container to be able to properly create the mule context.",8
"Cannot log to application log for a failed deployment
Install latest snapshot (build c22fb549), create an application with the attached config and start using bin/mule -M-Dmule.agent.enabled=false.    Deployment fails as expected but there is a problem when trying to log to application log. See attached log.",8
"Add protocol attribute to listener-config and request-config to improve usability
Currently is difficult for an user to realice how to configure HTTPS for listening HTTP requests or sending HTTP requests. The way to do that currently is by defining a TLS Context element (which can be empty for sending request, in such case it will use jvm default certificatess) inside the listener-config or de request-config element. That it's not straightforward if the user is working with XML and for users that do not know that SSL / TLS is the protocol behing HTTPS isn't either despite they use Studio.    The idea is to add a protocol attribute (with default value HTTP) in the listener-config and the request-config.  - Listener config:     - if user sets protocol=""http"" or provides no values then we validate that the user didn't put a TlsContext.     - If user sets protocol=""https"" we validate that the user provided a TlsContext with at least a keystore configured on it.   - Request config:     - if user sets protocol=""http"" or provides no value then we validate that the user didn't put a TlsContext     - if user sets protocol=""https"" and provides no TlsContext config then we create a TlsContext by default (implicitly) using the default jvm certificates  - if http is selected, port 80 is used by default  - if https is selected, port 443 is used by default    The usability improvements is:   From Studio the user has a much more easy way to find where to define the use of HTTPS since it's going to be in the main configuration section of both listener-config and request-config   From XML the user will see a hint from the XML content assistant to pick the protocol right in the listener-config element or request-config element.    With the new behaviour there's no reason to support an empty tls:context element in the config.  When we rebuild the current TCP transport ideally we can reuse the same mechanism as in HTTP (no idea what the ""protocol"" attribute would be called in that case) or add support for an empty tls:context again.  ",5
"Deprecate HTTP transport
Deprecate XML elements of the HTTP transport.",5
"HttpListener ParameterMap should behave as a Map
ParameterMap is a Map<String, String> and holds the values of query parameters, uri parameters and POST params.  The problem that currently have are:   - The parameter map is mutable when it should't   - It does not have an API in the interface that can be used by the user (there's an special method getAll used when a parameter returns a collection of values)   - it does not comply with the Map interface for Map<String, String> as it declares.    ",3
"Default HTTPS configuration in requester not working correctly
The protocol=""HTTPS"" configuration in the request-config is ignored if there is no default TLS context factory in the registry.",3
"Remove Maven warnings
We recently had an [issue|MULE-8113] with our Maven build, it wasn't including a dependency. When doing a little research I found that it was because a duplicated declaration of maven-jar-plugin. This root problem didn't appear when building the module, but when building an ancestor (distance 2). To avoid this kind of issues we must ensure that we don't have Maven warning in our builds.",8
"HTTP Listener fails during initialization inside batch
When adding an http:listener inside the input of a batch job then the app fails during startup.    Seems that DefaultBatchEngine is asking for all the batch jobs during initialization, then the batch job manually executes initialize and injection over the input elements (http:listener) but at this point the HttpListenerConnectionManager has not bean registered (using registry bootstrap) so there's a null pointer during listener initialization. ",5
"Problem sending outbound attachments in HTTP requester
When sending a multipart request, the requester assumes that each part is a file, and adds the corresponding headers (filename attribute at the beginning of the part, transfer-encoding: binary, etc). This makes the request to be invalid in some cases. Use case to test: upload a file to Box.    Example test (replace the dev token and the parent folder id):        <http:request-config name=""requestConfig"" host=""upload.box.com"" port=""443"" protocol=""HTTPS"" responseTimeout=""10000""  />        <flow name=""test"">          <set-attachment attachmentName=""attributes"" value=""{&quot;name&quot;:&quot;test.txt&quot;, &quot;parent&quot;:{&quot;id&quot;:&quot;12345678&quot;}}"" contentType=""application/json"" />          <set-attachment attachmentName=""test.txt"" value=""Test content"" contentType=""text/plain"" />            <http:request config-ref=""requestConfig"" path=""/api/2.0/files/content"" method=""POST"" >              <http:request-builder>                  <http:header headerName=""Authorization"" value=""Bearer xxxxxxxxxxxxx""/>              </http:request-builder>          </http:request>      </flow>    The requester sends a multipart request with the following format.    POST /api/2.0/files/content HTTP/1.1  Host: localhost:8082  Authorization: Bearer xxxxxxxxxx  MULE_ENCODING: UTF-8  Connection: keep-alive  Accept: */*  User-Agent: NING/1.0  Content-Type: multipart/form-data; boundary=Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Length: 463    --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Disposition: form-data; name=""attributes""; filename=""attributes""  Content-Type: application/json  Content-Transfer-Encoding: binary    {""name"":""test.txt"", ""parent"":{""id"":""12345678""}}  --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Disposition: form-data; name=""test.txt""; filename=""test.txt""  Content-Type: text/plain  Content-Transfer-Encoding: binary    Test content  --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC--    The problem is the ""attributes"" part, which is sent as a file part. It shouldn't contain the filename attribute, and the transfer encoding shouldn't be binary. Postman just sends the following, and it works correctly:    Content-Disposition: form-data; name=""attributes""    {""name"":""test.txt"", ""parent"":{""id"":""12345678""}}  ",8
"HTTP Listener Server should return Method not supported
When there's at least one HTTP listener for a uri but the listeners for that uri do not support a given method an status code  405 Method Not Allowed should be return. Currently it's returning 404.",5
"Change the AsyncCompletionHandler in the HTTP requester to use a static logger
The AsyncCompletionHandler used by AHC in the HTTP requester uses a logger that is stored in an instance variable. Change it to use a class variable, to avoid loading the logger from the logger factory each time a request is sent (an AsyncCompletionHandler is created for each request).",3
"Mule starts when a request element has host/port undefined, only failing when request is used.
This should fail at startup, not in runtime.",3
"Improve HTTP listener logging for usability
Mule does not log to show what host/port/path Mule listening on.  This is important for understanding what might be going on when things aren't working as expected, and existed with the existing http transport.    Also, error/logs related to listeners not being available should take into account ""allowedMethods"" otherwise errors like this which make no sense occur:    {code}  WARN  2014-12-30 10:01:46,424 [[http-module-echo].HTTP_Listener_Configuration.worker.01] org.mule.module.http.internal.listener.HttpListenerRegistry: No listener found for request: /  WARN  2014-12-30 10:01:46,424 [[http-module-echo].HTTP_Listener_Configuration.worker.01] org.mule.module.http.internal.listener.HttpListenerRegistry: Available listeners are: [/]  {code}  ",3
"Listener response streaming only returns part of body.
If you edit this test case to use larger body sizes, then tests begin to fail:    org.mule.module.http.functional.listener.HttpListenerResponseStreamingTestCase",5
"Exception in HTTP listener when path=""/"" and basePath=""/""
When using an http:listener with path=""/"", and referencing a listener-config where basePath=""/"", then an ArrayIndexOutOfBounds exception is thrown when receiving a request.",3
"HTTP requester not adding the reason phrase in the response
The HTTP requester is adding an inbound property with the status code of the response, but no property with the reason phrase. Currently there is no way of getting the reason phrase of the response, analyze if it makes sense to add another inbound property with the reason phrase.    The status code validator should also include the reason phrase when failing due to an invalid status code in the response. This is useful when consuming REST APIs that add information in the reason phrase of an error status code response.",5
"Listener should respect keep-alive with HTTP 1.0 and disable chunking.
With HTTP 1.0 KeepAlive header, the http response from Mule returns ""Connection: Close"" when streamingMode is ALWAYS or the payload is an InputStream.    I'm not 100% sure if HTTP 1.0 officially supports chunking, but I am sure that the keepAlive header should be respected an chunking shouldn't affect this.",8
"Inconsistent implementation of streamingMode=""NEVER"" between listener and requestor.
There are a number of cases tested in HttpListenerResponseStreamingTestCase where even when responseStreamingMode=""NEVER"" chunking is still used.    In my mind it should be the ""AUTO"" mode that decided if it should use chunking based on i) payload type ii) presence of headers.  If there is a mode called ""NEVER"", it should never do chunking otherwise this is confusing/misleading.    On the other hand, <request> currently throws an exception in this scenario.    Update behaviuor so that in both cases:    AUTO:    - Chunking if payload is InputStream and no Content-Length header present.     - Else delete transfer-encoding header if present and log.    ALWAYS:  - Delete content-length header and log.    NEVER:  - Delete transfer-encoding header and log.            ",5
"Mule Integration QA build is failing because of wrong sxc dependency version
tests/integration module is failing because is trying to retrieve sxc version, which is not needed.",3
"Support parameter grouping in Configurations and Operations
There are cases in which a group of parameters are frequently used together, for which it makes sense to treat them as a group.    The extensions api already supports mapping pojos directly in the XML, but in same cases which group is preferred as parameters rather than a top level object.    To enable that, the @Parameters operation will be created    {code:java}         @Extension       public class MyExtension {             @Parameters           private Options options;       }         public class Options {            @Parameter            private String color;              @Parameter            @Optional            private String mode;              private String owner;       }   }  {code}    The outcome of the code above is a configuration with two parameters called 'color' and 'mode', one required and the other optional.  The configuration has no attribute called options. If the Options class were to have another field also annotated with @Parameters, then such fields will be ignored.    In the same way, the annotation can be applied to a class holding operations:    {code:java}       public class Operations {             @Parameters           private Options options;             @Operation           public void hello(String message) {               ...           }             @Operation           public void goodBye(String message) {             }    }  {code}    In this case, both operations will have three parameters: message, color and mode.    The last use case for this annotation is to have nested parameter classes:  {code:java}       public class Options {              @Parameter            private String color;              @Parameter            @Optional            private String mode;              @Parameters            private MoreOptions moreOptions;       }       }  {code}    In this last example, the configuration/operation that is augmented with this extra parameters will have the sum of Options and MoreOptions parameters. Those parameters will be flattened, meaning that the model will contain no reference to the fact that the MoreOptions parameters were nested inside Options.    The field must be a Java bean property (ie it needs to have setters and getters matching the field name).",8
"Cleanup the @Operation annotation parameters
The @Operation parameter takes a name argument. That should be remove since directly contradicts the consistency that the API tries to enforce    The annotation also contains an ""acceptedPayloadTypes"" which is no longer used. That should be cleaned up",1
"Move packages on annotations module from org.mule to org.mule.module.annotations
Each module/bundle must use different packages names for OSGi.   Annotations module uses org.mule prefix which belongs to mule-core",3
"Moving packages on spring-config module from org.mule to org.mule.module.springconfig
Each module/bundle must use different packages names for OSGi.   Spring cnofig module uses org.mule prefix which belongs to mule-core",3
"Write spec for validations extension
Write and validate a Spec for a new extension module for validation purposes.",8
"Build number Maven plugin should be activated always
We are currently executing maven-build-number-plugin only in release profile, this should be ran for all profiles.",3
"Remove Unused Scripts
We need to see which of these scripts in buildtools/scripts are still being used, and remove the ones that are not:    CheckReintegratedWorkingCopy.groovy  DeployArtifacts.groovy  EclipseXmlCatalog.groovy  ListExcludedTests.groovy  ListIncludedTests.groovy  ListSchema.groovy  ListTestExclusions.groovy  ScanLicenseHeaders.groovy  SchemaStatistics.groovy  SvnJiraParser.groovy  SvnJiraParser.sh  SvnPropertiesSetter.sh  SwitchLicenseHeader.sh  SwitchSchemaVersion.groovy  SwitchVersion.groovy  XmlCatalogFromMuleStandaloneDistro.groovy  build.sh  compare_exclusions.sh  mkpom.sh  mule_root.sh  mule_undo.sh  tabstospaces.sh  update_poms.sh  ",5
"Fail to expand properties when using property placeholder shared in a domain
Steps:    # Deploy the below application and domain  # Put domain.properties in domain root dir  # bin/mule    * Expected: Mule starts and flow listens on 127.0.0.1:8811/in1 and 127.0.0.1:8811/in2  * Actual: Mule fails to start because $[http.port] is an invalid value for port  * Note: I put domain.properties file in domain root directory because in domain/classes it is not found  ",5
"Core extension dependencies are not initialized in order
Core extensions are initialized using the discorevy order instead of the order determined after resolving the dependencies.  ",1
"Move tests/functional tests to tests/integration
tests/functional should be only for test harness",3
"Do not publish test-jar for any module that is not test harness
We publish test source code, we don't need to distribute test binaries except for the test harness.",8
"Remove functional-tests jar from distributions
Validate with community/support/developers",5
"Integrate Mule ESB Matchers
# Test matchers  ## Pass and fail scenarios  ## Test error description  # Verify that we didn't created a similar one yet  # Documentation",13
"Supported and recommended JRE version should be at least 1.7.0_60
In MULE-6866 we upgraded to Groovy 2.3.7-indy but according to [Groovy docs|http://groovy.codehaus.org/InvokeDynamic+support] there are known issues with Java versions lower than 7u60. We should increase supported and recommended versions to 1.7.0_60",1
"Allow extension components to extend existing functionality
There're cases in which an operation implemented through the ext-api should be part of an specific substitution group. Because substitution groups are an XSD specific concept and because the same concept might be necessary in other DSL types, we need a mechanism to denote extensibility that goes beyond Java's ""extends"" and ""implements"" keywords but is still type related.    For that purpose, two new annotations are created:    @Extensible: means that a given type is extensible by another extension. It doesn't mean type subclassing, but extension from a functionality point of view. This annotation has an optional String alias() attribute to allow a better experience when generating XSD    @ImplementationOf(type=XX.class): This annotation can be used on a class or method implementing operations. It means that the affected operations are to be part of a substitution group defined by an extensible type. The type argument in this annotation is mandatory and has to be a type that is annotated with @Extensible",3
"Allow restriction on which types of operations can be nested
Currently, the ext-api supports nested operations through the use of arguments of type NestedProcessor. However, the generated schema allows any type of message processor to be nested.    There're cases in which it's necessary to limit that to specific groups. For those cases, a new annotation is created: @RestrictedTo(type=XX.class)    The type used in that annotation has to be annotated with @Extensible. By doing that, the SchemaGEnerator will generate a specific named group for that extensible type and only items on that group will be allowed as nested for that operation",5
"Rename extensions -> extension in java package name
Also ExtensionManager is better than ExtensionsManager in english IMO.",1
"OAuth authentication code doesn't fail when access token is null
When consuming some APIs such as Facebook or Google Contacts a response code 400 is returned according to the log, but it does not match with the debugger HTTP response code, which is 401    NOTE: using success status code validator, does not avoid the exception. We tested with 400 and 401    See attached documents",5
"Spring Spike part II: Take lifecycle away from Spring
Continue the Spring registry spike, this time try to take lifecycle control away from Spring",8
"Spring Spike part III: Make a fast registry for tests
Continue the spring spile. This time, make a fast registry for tests",8
"The changes in MULE-7742 impacted in performance, a better solution should be used.
Review that changes in MULE-7742 and the previous changes proposed by Victor Romero.",13
"Deprecate org.mule.util.scan classes in Core in order to support Java 8
Our current version of ASM (3.3.1) is not fully compliant with Java 8, so we need to deprecate it use for 3.7 M1 and look for a replacement in 3.7 M2.",5
"Support TLS SNI Extension in Http OutboundEndpoint
Java does not send SNI because of the the socket is created.    While Java 7 supports the SNI extension with TLS it only uses it if the hostname is specified when the Socket is created rather than a InetAddress (it doesn't get hostName from InetAddress).",5
"Test support for TLS SNI Extension in Http Module Requester
Currently not supported.    Also review listener support.",8
"Mule 3.6 HTTPS Request Connector does not validate certificate presented by remote server
The server SSL certificate is not validated by requestor at all.",8
"HttpRequester not configuring TLS cipher suites and protocols
The HTTP requester from the new module is not configuring restricted protocols and cipher suites for TLS.",8
"Document new HTTP Connector
Add documentation for HTTP Connector",5
"Discuss how to: Mule Test Harness should include Mule jars in test classpath
Now when a user creates a Maven Mule project when he runs the tests gets errors because not including in the classpath Mule jars. We should have a way  to make tests include those jars.   One possible solution is to make the archetypes include Mule ESB distribution dependency with runtime scope. This way all transitive dependencies would be included when running tests.",5
"OAuth2 postAuthorize() with an expired token fails even if token was refreshed
The Box connector has a postAuthorize method that invokes one of the connector's processors.  When one of the connector's processors is invoked and the postAuthorize is called with an expired access token, the BaseOAuth2Manager is able to refresh the access token but re-throws the token expired exception which makes processor invocation fail.    I believe the issue can be found in the following method:  org.mule.security.oauth.BaseOAuth2Manager.postAuth(OAuth2Adapter, String)  ",1
"HTTP Listener does not handle ""Expect: 100-Continue"" (RFC 2616) header correctly
This can cause depending the scenario:  1) 1s latency overhead  2) Requests to hang  ",8
"401 response received, but no WWW-authenticate header was present
I've been searching and and tinkering since last week to figure out what is wrong with this, but no matter how I tried it still gives me this error in the console.    I'm testing the http connector (3.6 EE) against twitter ReST API vs testing with Chrome's POSTMAN Rest client.    With the POSTMAN client, it is working fine when POSTing status update. However with Mule it fails and gives me the error mentioned. I even added ""WWW-Authenticate"" (replaced ""Authorization"") before the call to http connector itself, and tried with adding it to header as well, still everything fails.    Note: For the get timeline it is working both on Postman rest client and http connector, but when I tried on POSTing to status/update.json, Postman is successful, while Anypoint http connector fails.  ",5
"Http Listener allows inexistent keystore
When I create an https listener Mule validates that the trustsore file exists but it doesn't validate that the keystore file exists. Try with the attached config.   Create the truststore like this:    keytool -genkey -alias mule -keyalg RSA -keystore keystore.jks -dname ""CN=Mule, OU=Engineering, O=MuleSoft, L=BA, ST=BA, C=AR""",5
"Allow cipher suite and protocol configuration per connector
TLS cipher suite configuration is done through conf/tls-default.conf for all the Mule Server. We need a way to allow per connector configuration.    Use cases:  - Connect to a legacy API uses a vulnerable cipher suite for which the vulnerability has been mitigated, but I don't want to allow that cipher suite for other consumed APIs.  - Because of internal security policy I need to use a particular set of cipher suites to publish an API but I need to consume an external API wich uses a different cipher suites not allowed internally.",5
"Allow to set certificate alias in keystore configuration
When multiple certificates are installed in the keystore file, we need to provide a mechanism to pick one in the tls context element.    How this is done can be review but most likely is using the certificate alias. So an alias optional attribute must be used in the keystore element.    When there are multiple certificates and alias is not defined we should define hich on we should pick.",3
"Disable SSLv3 by default on FIPS 140-2 scenario
The file tls-fips140-2.conf doesn't restrict enabled protocols by default.  When enabling FIPS 140-2 on wrapper.conf, SSLv3 gets enabled by default.",1
"HTTP static resource component fails with HTTP listener
The HTTP static resource component fails with the new HTTP listener component because it doesn't extract correctly the listener path to define the resource to return.",5
"Client credentials does not fail if it could not retrieve access token
When using client credentials, start up of the application does not fail if mule was not able to retrieve an access token.    Additionally some logging information must be added for troubleshooting.",5
"HTTP Listener doesn't validate clients
When using tls:trust-store in an HTTP listener it doesn't validate the client certificate.    Reproduce running:    curl -k https://localhost:4443    {code:xml}  <?xml version=""1.0"" encoding=""UTF-8""?>    <mule xmlns:http=""http://www.mulesoft.org/schema/mule/http""  	xmlns:tls=""http://www.mulesoft.org/schema/mule/tls"" xmlns=""http://www.mulesoft.org/schema/mule/core""  	xmlns:doc=""http://www.mulesoft.org/schema/mule/documentation""  	xmlns:spring=""http://www.springframework.org/schema/beans"" version=""EE-3.6.0""  	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""  	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd  http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd"">  	<http:listener-config name=""HTTP_Listener_Configuration""  		protocol=""HTTPS"" host=""0.0.0.0"" port=""4443"" doc:name=""HTTP Listener Configuration"">  		<tls:context>  			<tls:trust-store path=""keystore.jks"" password=""storepass"" />  			<tls:key-store path=""keystore.jks"" password=""storepass""  				keyPassword=""keypass"" />  		</tls:context>  	</http:listener-config>  	<flow name=""1"">  		<http:listener config-ref=""HTTP_Listener_Configuration""  			path=""/"" doc:name=""HTTP"" />  		<set-payload value=""#['Message received at ' + new Date().toString()]""  			doc:name=""Set Payload"" />  	</flow>  </mule>  {code}",5
"Upgrade to grizzly 2.3.19
See fixes includes multiple bug fixes plus two improvments I requested:    1) SNI Support out of the box with SSLFilter. https://java.net/jira/browse/GRIZZLY-1737  2) Mechanism to limit size of send queue and this direct memory use. https://java.net/jira/browse/GRIZZLY-1730",8
"Upgrade CXF to 2.7.15 version
Mule 3.7 needs to run using Java 8, but current CXF major version (2.5) does not support it, and we have to move to version 3.  We need to define how to provide (if possible) backwards compatibility and how to use the new version.",13
"Upgrade Spring to version 4.1
In order to support Java 8 we need to move to a newer version of Spring.",8
"Upload 3.6.0 javadocs
Upload javadocs to: https://www.mulesoft.org/docs/site/3.6.0/apidocs",5
"ClassCastException when setting a MEL expression in the config-ref of a Connector's call
When a MEL expression is set in the config-ref of a Salesforce Connector call and the object-store has no OAuthState stored for a user, the operation fails for that user with a ClassCastException with the following message.        ********************************************************************************  Message               : Failed to invoke describeSObject. Message payload is of type: CaseInsensitiveHashMap  Code                  : MULE_ERROR--2  --------------------------------------------------------------------------------  Exception stack is:  1. java.lang.String cannot be cast to org.mule.security.oauth.OnNoTokenPolicyAware (java.lang.ClassCastException)   org.mule.devkit.processor.DevkitBasedMessageProcessor:97 (null)  2. Failed to invoke describeSObject. Message payload is of type: CaseInsensitiveHashMap (org.mule.api.MessagingException)   org.mule.devkit.processor.DevkitBasedMessageProcessor:128 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.ClassCastException: java.lang.String cannot be cast to org.mule.security.oauth.OnNoTokenPolicyAware      at org.mule.devkit.processor.DevkitBasedMessageProcessor.process(DevkitBasedMessageProcessor.java:97)      at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)      at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)     + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)  ********************************************************************************        I believe the issue can be found in the following method:  org.mule.devkit.processor.DevkitBasedMessageProcessor.process(MuleEvent) line 97.  moduleObject is cast to OnNoTokenPolicyAware without verifying if it is a String.  The method findOrCreate does verify that in line 174.",5
"It is not possible to define more than one keystore/truststore
The TLS contexts introduced in 3.6 interfere with each other. Reproduce with the following scenario, where there are two flows that consume an HTTPS service, one with the server certificate in the truststore, and the other one without it. The first flow should work but the second one should fail. Currently, they both work correctly.        <http:request-config name=""validCertHttpConfig"" protocol=""HTTPS"" host=""localhost"" port=""${httpsPort}"">          <tls:context>              <tls:trust-store path=""trustStore"" password=""mulepassword"" />          </tls:context>      </http:request-config>        <flow name=""validCertFlow"">          <http:request config-ref=""validCertHttpConfig"" path=""requestPath"" method=""POST"" />      </flow>          <http:request-config name=""missingCertHttpConfig"" protocol=""HTTPS"" host=""localhost"" port=""${httpsPort}"" >         <!-- No certificate has been configured to test certificate verification -->      </http:request-config>        <flow name=""missingCertFlow"">          <http:request config-ref=""missingCertHttpConfig"" path=""requestPath"" method=""POST"" />      </flow>",5
"Modify substitutableInt restriction to allow APIGateway extension language 
API Gateway has an extension language composed by:   ![ <language extension> ]   This extension cannot be used in the port property of the listener-config and request-config, because of the substitutableInt restriction.    The actual regex in the restriction is:  <xsd:pattern value=""(\#\[.+\]|\$\{[^\}]+\})""/>    Including the Gateway language extension should be:   <xsd:pattern value=""(\#\[.+\]|\$\{[^\}]+\}|\!\[.+\])""/>    ",1
"HTTP requester throws timeout errors with POST request
Appears to be related to the ""Expect: 100 continue"" header with Grizzly, that is found in HTTP/1.1 POST request.  The bug reproduces in ESB 3.6 and 3.6.1, also GW 1.4.    attached is the jmx file, using this proxy app for ESB (no Gateway tags).  https://github.com/mulesoft/performanceworks/blob/master/APPS/PROXY-MCD/100B/http_module_proxy/proxy.xml    If you change the method to GET instead of POST, you will not get the error.    You should be able reproduce it easily.    Wai    ERROR 2015-02-11 00:29:48,112 [[PabloTestAPI_NewHTTP].proxyConfig.worker.09] org.mule.exception.DefaultMessagingExceptionStrategy:     ********************************************************************************    Message               : Error sending HTTP request. Message payload is of type: BufferInputStream    Code                  : MULE_ERROR-29999    --------------------------------------------------------------------------------    Exception stack is:    1. null (java.util.concurrent.TimeoutException)      org.glassfish.grizzly.impl.SafeFutureImpl$Sync:357 (null)    2. Error sending HTTP request. Message payload is of type: BufferInputStream (org.mule.api.MessagingException)      org.mule.module.http.internal.request.DefaultHttpRequester:190 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)    --------------------------------------------------------------------------------    Root Exception stack trace:    java.util.concurrent.TimeoutException            at org.glassfish.grizzly.impl.SafeFutureImpl$Sync.innerGet(SafeFutureImpl.java:357)            at org.glassfish.grizzly.impl.SafeFutureImpl.get(SafeFutureImpl.java:264)            at com.ning.http.client.providers.grizzly.GrizzlyResponseFuture.get(GrizzlyResponseFuture.java:173)        + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)    ********************************************************************************",13
"HTTP requester always add a / at the beginning of the request URI
An http requester with this config http:request path=""something"" should generate a request with uri something but it's generating /something instead.",5
"WS consumer not evaluating flow vars in the serviceAddress when used with the new HTTP connector
WS consumer allows MEL expressions in the serviceAddress property. Since 3.6, when the new HTTP connector is used by default, flowVars are not recognized in MEL expressions in the serviceAddress. The only variables that work are properties related to the Mule message. With the HTTP transport it works OK.  This is because the outbound call uses muleClient to use the HTTP requestor, and the MuleEvent that carries the flowVars is lost.  To reproduce, modify DynamicAddressFunctionalTestCase to use a flow var instead of an inbound property.",5
"Review and merge MULE-7588
Review and merge MULE-7588",5
"write a spec on new lifecycle and registry consolidation
Write and circulate a spec on MULE-7588",8
"HTTP delete body is not allowed
I am not able to call HTTP delete verb from mule HTTP connector with body .   ",5
"Improve Jenkins email notifications to add the info about who made the last commit 
Mail Notifications of failure don’t have the message of the commit which launch the build.",3
"Application Plugins (Cloud Connectors) support for external dependencies
As a user I will like to use a connector such as Siebel, packaged as a plugin deployed in the plugins folder and be able to use external dependencies that cannot be shipped inside the connector.",8
"Fix Mule ESB Maven Tools testing for apps using domains.
1.1-SNAPSHOT right now depends on changes for 3.7 that haven't been done yet. We need to modify it so that ExampleFunctionalTestCase extends from DomainFunctionalTestCase if the app belongs to a domain.",3
"HTTP listener fails when receiving empty request with content type x-www-form-urlencoded
When a POST request with content type application/x-www-form-urlencoded and empty body is sent to an http:listener, a 500 response is received and the flow is not executed. This happens because of a ClassCastException inside the listener. The flow should be executed, with NullPayload in the Mule message.",1
"Domain redeployment fails with zip file closed
When doing a redeploy of a domain it fails with zip file closed when trying to reload some classes.",5
"Review and update classloading documentation
Documentation of mule classloading at http://www.mulesoft.org/documentation/display/current/Classloader+Control+in+Mule is not accurate and is out of date.  There are missing things like application plugins, new domain classloading, etc",5
"HTTP Request returns 401 when given correct authentication
A prospect has not been able to connect to a web service hosted in IIS using Digest auth in the HTTP listener.  They could connect using a java class with same credentials.    none of the following combination worked as username in the HTTP connector: {realm\username, realm\\username, username:realm.    Here is the webservice I used to reproduce the error:  http://httpbin.org/digest-auth/auth/user/passwd  Credentials {username=user, password=passwd}  If needed: port=80; realm=me@kennethreitz.com    Returned is 401: unauthorized",8
"After upgrade CXF to 2.7.15 some jaxws-client configurations fail when using a proxy.
When the service method receives a Holder OUT parameter and then a String, the string value is not received by the server.  If the method returns void, then the value placed in the OUT parameter does not arrive the to client.    See org.mule.module.cxf.HolderTestCase, method testClientProxyEcho3Holder.",8
"README.txt in <MULE_HOME>/logs is outdated
The README.txt has not been updated to reflect the changes derived from the implementation of log4j 2.",1
"Remove JRuby from distribution
There is a vulnerability issue on the jruby version used in old Mule version. Updating Jruby to a newer version requires to upgrade to joda time, which also requires to update other dependencies. So we have decided to remove JRuby from old Mule distributions",8
"Source attribute in http requester not working when payload is null
When the ""source"" attribute is specified in an http:request element, it is ignored when the payload of the Mule message is NullPayload.    Example:        <http:request-config name=""config"" host=""localhost"" port=""${httpPort}"" />      <http:listener-config name=""listenerConfig"" host=""localhost"" port=""1234"" />        <flow name=""formParam"">          <http:listener config-ref=""listenerConfig"" path=""/*"" allowedMethods=""GET,POST"" />          <set-variable variableName=""httpBody"" value=""#[{'testName1':'testValue1', 'testName2':'testValue2'}]"" />          <!--              With this line uncommented, the map is sent. If not, the POST request has no body even if the source attribute contains a map.              <set-payload value=""test"" />            -->          <http:request config-ref=""config"" path=""testPath"" method=""POST"" source=""#[flowVars.httpBody]"" />      </flow>",5
"Update commons-io in mule-commons to match the one used in mule
In mule-common the commons-io version is 1.4:  {code}          <!-- Same version as Mule! -->          <dependency>              <groupId>commons-io</groupId>              <artifactId>commons-io</artifactId>              <version>1.4</version>          </dependency>  {code}    While mule is declaring the version to 2.4:  {code}  <commonsIoVersion>2.4</commonsIoVersion>  {code}    This happens both in 3.6.x and master branches.",1
"ObjectAlreadyExistsException when using splitter and until-successful
When using a splitter and an until-successful message processor, the following exception is thrown:    ERROR 2012-10-03 14:46:09,550 [[5955-until-successful].connector.http.mule.default.receiver.04] org.mule.exception.DefaultMessagingExceptionStrategy:   ********************************************************************************  Message               : null  Code                  : MULE_ERROR--1  --------------------------------------------------------------------------------  Exception stack is:  1. null (org.mule.api.store.ObjectAlreadyExistsException)    org.mule.util.store.AbstractObjectStore:53 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/store/ObjectAlreadyExistsException.html)    Root Exception stack trace:  org.mule.api.store.ObjectAlreadyExistsException    org.mule.util.store.AbstractObjectStore.store(AbstractObjectStore.java:53)    org.mule.routing.UntilSuccessful.storeEvent(UntilSuccessful.java:300)    org.mule.routing.UntilSuccessful.storeEvent(UntilSuccessful.java:291)      + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)    Steps to reproduce:    1) deploy the attached application '5955-until-successful.zip'  2) invoke the app by hitting ""http://localhost:8080/in""    Expected: each message in the split list should be assigned a unique id in the UntilSuccessful class which will be used in the object store    Actual: only the first message in the list is sent successfully as the second message throws an exception (the mule event id is used and since this is the same for each message, the exception above is shown)    Workaround: as a workaround, one may create an extra flow and make use of a vm queue in between the splitter and until-successful. This creates a new event per message, hence the exception does not occur.",3
"Upgrade ActiveMQ to version 5.11.0
We need to evaluate the effort and migrate ActiveMQ dependencies to 5.11.0 to take advantage of the latest bugfixes.",3
"Release Mule ESB Maven Tools (v 1.1)
We need to release version 1.1 (ideally for 3.7) since this version now includes a proper test case for apps that belong to a domain. The release will also mean reviewing the current solution and testing the tools.",8
"Can't uncompress zip files containing no entries for folders
Mule requires ZIP files that contain entries for folders and files like this:  x/lib  x/lib/a.jar  x/lib/b.jar    When the zip file contains only entries for files lie this:  x/lib/a.jar  x/lib/b.jar    The file cannot be processed correctly.",2
"log4j2.xml not being loaded during functional test case
When doing a functional test case logs are not active by default.  The idea should be that if I place a log4j2.xml in some place in the classpath then I should be able to enable logs.     What happens is that this file is not getting picked up. Doesn't really matter in which part of the application folder structure is placed it doesn't get loaded.    If you run a test the only thing you see is:    WARN  2015-03-13 10:11:07,233 [main] org.mule.tck.junit4.AbstractMuleTestCase:   --------------------------------------------------------------------------------  Hung threads count: 2. Test case: org.mule.munit.TheTest. Thread names:  -> AsyncLoggerConfig-1 - 10  -> ReaderThread - 8  --------------------------------------------------------------------------------    Now you try to configure Log4j2 on your own the logs start working just fine but in order to do that you need to add this code to your test:    try {  	    URI configuration;  	    configuration = Thread.currentThread().getContextClassLoader().getResource(""log4j2.xml"").toURI();  	    Configurator.initialize(""config"", null, configuration);  	} catch (URISyntaxException e) {  	    e.printStackTrace();  	}      Please check the attached project for more data.  Please notice that the application has just a logger MP with level Debug which by default shouldn't be printed unless you change the logs (which works just fine when running mule normally) ",5
"Backport MULE-8315 and MULE-7789 to all maintenenance branches
As part of the library updates related to security vulnerabilities, there is a couple of changes that must be backported to 3.5.x, 3.4.x, 3.3.x, 3.2.x and 3.1.x:    MULE-7789: needed to remove the usage of tomcat-util artifact (this one is already included in 3.5.x branch)  MULE-8315: needed to upgrade tomcat libraries to a newer version",8
"Collection splitter is not setting the group size when payload is an Iterator
Salesforce queries return an iterator and when a collection splitter is used, it fails to aggregate the collection after because the group size is set to -1.  Attached mule config    This seems to be happening because this class https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/core/src/main/java/org/mule/routing/outbound/IteratorMessageSequence.java is used from https://github.com/mulesoft/mule/blob/1dbf6e09a651184e9c54ec8988ecf1907cbdd58f/core/src/main/java/org/mule/util/collection/EventToMessageSequenceSplittingStrategy.java and it is setting UNKNOWN_SIZE as Group size for all Iterator payloads",5
"Leverage MULE-7588 in extensions api
Leverage the work done in MULE-7588 to implement a corrected lifecycle and dependency injection in the extensions api",8
"XmlToXMLStreamReader does not support OutputHandler as source type
XmlToXMLStreamReader declares OutputHandler as source type (in its superclass) but fails to convert that type.",3
"Reuse OperationImplementation instances instead of creating and injecting new ones each time
Currently the ext-api is creating a new instance of the operation implementation for each event. That is very confortable for the user, but it has performance considerations associated to garbage collection and the new to perform dependency injection all the time.     We need to move to a schema in which:     * One instance is created per configuration and reused as long as that configuration lives  * The Class holding the method annotated with @Operation needs to have a constructor which receives a single argument which is the configuration to use. Failure to provide such a constructor which result in the application not starting  * Upon creation, Mule will inject dependencies on this class but will not add it to the registry  * This also means that it will no longer be valid to obtain things like the MuleEvent through a @Inject annotation, you have to receive it a method argument, which means that the invoker needs a refresh too",8
"Add a backwards compatiblity setting to support Devkit artifacts which violate JSR-330
Per the work done on MULE-7588, Mule now supports the JSR-330 spec. However, as DEVKIT-1539 explains, Devkit is currently violating that spec.    Devkit will fix this for the latest version but we need to add a compatibility setting to allow artifacts generated with older versions of devkit to function. This will work by customizing the injecting post processor to detectinstances which instances are devkit generated and skip dependency injection on them ",5
"Domains are not well disposed and get reused on redeploy.
Domains are cached on creation but they are not correctly removed on dispose so on redeployments they get reused.",5
"Improve MuleMessage's data type consistency
DefaultMuleMessage's datatype is not being properly updated and maintained.  For example:  _DefaultMuleMessage#setEncoding does not update dataType's encoding  _DefaultMuleMessage#setMimeType does not update dataType's mimeType  _DefaultMuleMessage#setPayload does not update dataType's type  _DefaultMuleMessage#setProperty is not update dataType when a encoding property is set on the message    Improving data type consistency and propagation is required to better support auto transformations and mapping tools",8
"Implement Validations XML components
Implement Validations XML components",8
"Create MEL version for each validator in the validations module
Create MEL version for each validator in the validations module",5
"Check if Ext-api jars are Maven Central compliant
Perform that verifyication on the mule-extensions-api and mule-extensions-api-annotations projects",5
"Remove unused manifest files
These MANIFEST files are present in our code but are not used:    ./modules/boot/src/main/resources/META-INF/MANIFEST.MF  ./modules/builders/src/main/resources/META-INF/MANIFEST.MF  ./modules/jaas/src/main/resources/META-INF/MANIFEST.MF  ./modules/management/src/main/resources/META-INF/MANIFEST.MF  ./modules/ognl/src/main/resources/META-INF/MANIFEST.MF  ./modules/scripting/src/main/resources/META-INF/MANIFEST.MF  ./modules/xml/src/main/resources/META-INF/MANIFEST.MF    They are all replaced by the manifest configured in root pom.xml    This manifest   ./core/src/test/resources/META-INF/MANIFEST.MF  is used to test the Java version checking, we shouldn't use a real manifest, we should use a fake one to check that version control is working.",3
"Add a way to inject all available core extensions in a core extension
Mule core extensions can have dependencies against other core extensions, but these dependencies are fixed on compile time (dependencies are defined using MuleCoreExtensionDependency method annotation).  In order to properly support some management scenarios, we need to provide a way to let a core extension to receive all the available core extensions.    Given the constraints on lifecycle imposed by the MuleCoreExtensionDependency dependencies, a core extension that receives all the available core extensions cannot contain any methods annotated with it.",5
"app.home property is no longer available
When an application is deployed, the Spring configuration builder is running before the SimpleConfigurationBuilder making some properties like app.home not available to the mule config",1
"extension API should consistently always inject values through fields instead of setters
Right now, when the ext-api creates an object uses setters to inject values parsed from XML, while in some other scenarios like when resolving expressions it uses fields. That leads to some inconsistency plus the setter injection limits the ability to encapsulate the internal representation of some object's state.    Always use fields to inject values.",1
"ExtensionResourcesGeneratorAnnotationProcessor is not been fired
ExtensionResourcesGeneratorAnnotationProcessor is not been fired because the full classname of @Extension has changed and the refactor didn't modified this file. This is because of a java language limitation which doesn't allow a .class.getName() kind of reference there.    As a result, xsd is not generated when building a extension",1
"add the concept of parameter alias in the ext-api annotations
When using the ext-api through annotations, there're limitations on the possible names that parameters can take because of the java language reserved words. For example, an attribute cannot be named class. Another problem is when from a coding point of view, an attribute should have one name which isn't so representative when seen from an extension's parameter point of view.    Because of that, we need the ability to add an alias attribute to the @Parameter annotation.",1
"The application logging configuration is not read or used.
When deploying an app with a logging congif (log4j2.xml), mule doesnt use its config and use the default every time.    Steps to reproduce:  Deploy the attached app on a mule instance.  Wait for it to be deployed.  The default app log will be created no matter which configuration was given.    Expected behavior:  Log into the configured file instead of the default one, if using Console, should log into mule_ee.log or mule.log (depending on the distribution).      ",1
"Introduce type level aliases for extensions API
When the XML support for the ext-api maps a java complex type as a top level element (usually the case when defining global pojos), there's the need to provide an alias so that the global element can have a name which is not directly tied to the Java type name.",1
"Add data type to message properties
MuleMessage properties have no information about the type of the value they are holding.  Providing a way to maintain this information will help to support more transformation scenarios and will improve usability in Studio",5
"Replace SetPayloadTransformer with a plain message processor
SetPayloadTransfomer is the implementation behind set-payload element.  As the name implies, is a Transformer and is executed invoking muleMessage transformation capabilities.  Problem with this transformer is that it returns only a value and in order to properly propagated message's dataType, it must set the correct dataType (the one configured by the user).  Besides that, transfomer's source/target dataType is not valid on this particular case, because the datatpye is dynamic (assigned value can be resolved from an expression). So dataType can't be statically defined.",5
"Upgrade async-http-client to 1.9.19.
We need to upgrade to version 1.9.18 in order to support NTLM.  Here's AHC's migration guide:  https://github.com/AsyncHttpClient/async-http-client/blob/master/MIGRATION.md  There could also be some issues with missing multipart classes.",13
"Implement NTLM authentication for the HTTP Requester
Once AHC is upgraded to 1.9.18 we should be able to add support for NTLM.",5
"Make json schema validator interoperable with the new Validator module
In mule 3.6.0 a json schema validator was introduced. It should be made interoperable with the new validation module introduced in MULE-8216 so that it can participate in <validation:all> operation",1
"Improve set properties transformers to set property datatype
Mule message properties now contain a datatype. All the transformers that set properties in a message/session should provide a way to configure the datatype and update that datatype in the property accordingly.",8
"Generated XSD defines restriction groups by extension
When an operation takes NestedProcessors as an argument, the @RestrictedTo annotation can be used to limit the acceptable message processors to a given substitution group.    However, what the XSD generator is doing is to create a group which lists all of the operations in the given restriction type. Because that group is fixed, it doesn't allow to externally contribute more elements with the same substitution group.     What the generator should do is to define a group which has a reference to the substitutionGroup and thus allowing variable elements which meet the restriction",1
"ArgumentTypeMismatch when many nested operations are supported but only one is provided
The ext-api supports defining operations which can take one nested Operation or a list of them.    When the operation supports many but only one is provided, the ResolverSetResult doesn't contain a list of one NestedOperation but a single one, which results on an ArgumentTypeMismatch.",1
"Improve data type propagation for properties
Work done on MULE-8453 did not include updating some property setter methods to include datatype.",2
"Message transformation must no update payloads data type when payload was not transformed
DefaulMuleMessage#transformMessage(MuleEvent, Transformer) always updates the message data type to the transformer output data type.  That is wrong because some transformers update parts of the message other than the payload. (like message properties)  Probably those transformers should be plain message processors, but a way to fix this problem is to check that payload has changed after the transformation.",3
"Configs should be optional when using Ext-api operations in a flow
Right now, every MP which executes an extension operation is required to provide a config. This is not good from a usability standpoint so the desired behaviour is:    * If a config is specified through the config-ref attribute, then use it  * If no config is specified but there's one configured, then locate it and use it  * If no config is specified nor defined, then depending on the extension an implicit one can be created. An implicit configuration is created by simply instantiating the default config. Configs should be marked as not supporting implicit creation through some annotation/annotation attribute",8
"remove the ""repackaged"" package from extension-support module
Because ext-api development started when mule was using Spring 3.x, a Spring 4.x package was embedded into our code.    Now that Spring was upgraded to the lastest version, that repackage should be remove in favor of the original classes in the spring jar",1
"Implement a solution to automatically infer supported schema versions for XML compatible extensions
Right now, when an extension is to have XML support, the @Xml annotation includes a ""schemaVersion"" attribute.    That is not a scalable solution because assuming that an extension is released in version 3.7, then its spring bundle should support schemas 3.7, 3.8, 3.9 and so forth, and it's very undesirable for a developer to traverse through all the extensions modifying that.     We need a solution in which given an ""inception version"" version, the current schema version is inferred and the prior ones back to the inception version are also included in the spring bundle. ",5
"Spike on on inferring extension version from project version
Currently, the @Extension annotation includes a version attribute which is used to specify an extension version.    However, it's undesirable to have the need to upgrade the version of every extension each time that a new version is released.    A mechanism should be defined for the extension version to be automatically inferred from the underlying ${project.version}. There should still be a way to fix the extension version arbitrarily",8
"Validate that Pojo attributes are not composites
When a pojo is used as a parameter in an Extension, XSD support is generated to allow users define the instance on the XML.    However, this won't work if the object is a composite. The composite fields should be skipped when generating the XSD support.",5
"It should not be mandatory for a class annotated with @Operation to depend on the config object
Right now, when a class contains methods annotated with @Operation, then it is demanded that a single constructor is available to create the instance and pass the configuration instance over.    However, not in all cases the operations in a class require of the configuration. The behaviour should be that if such constructor exists then it's used. If it doesn't, then a default constructor is used to create a config-less operation instance.    Only if no constructor is found which matches both criterias should an exception be thrown.",5
"Operations of an Extensible extensions should not require to be annotated with @ImplementationOf
Extensions can be annotated with @Extensible to signal that external modules can extend them further. Right now, it's required for the classes in which such extensions are implemented to be annotated with @ImplementationOf.     However, that's redundant since a given extension operations are by very definition extending it. Such annotation should only appear on third party extensions which are in fact extending it.",5
"Consider renaming @ImplementationOf to @ExtensionOf
Consider renaming @ImplementationOf to @ExtensionOf since it's clearer for some persons",1
"WSConsumerConfig should use the HttpRequesterConfig interface rather than the internal implementation
The *connectirConfig* field of the class org.mule.module.ws.consumer.WSConsumerConfig can be configured by passing an initialized instance of a *DefaultHttpRequesterConfig* when it should be using the interface of the the previous one: *HttpRequesterConfig*.    This small chance will unblock the DevKit's story [DEVKIT-1527|https://www.mulesoft.org/jira/browse/DEVKIT-1527] providing an automated way of instantiating WSC manually when initializing a HttpRequesterConfig by hand.",3
"Provide a builder for HttpRequesterConfig interface
Despite the normal use case for initializing a HttpRequesterConfig is from the definition parser, for a specific DevKit's story [DEVKIT-1527|https://www.mulesoft.org/jira/browse/DEVKIT-1527] we need to feed the WsConsumerConfig with an already initialized instance of *DefaultHttpRequersterConfig*.    Before this jira, ideally, [MULE-8481|https://www.mulesoft.org/jira/browse/MULE-8481] should be tackled down to make WsConsumerConfig consume the HttpRequesterConfig interface, so that from a DevKit's POV initializing objects and passing through the WsConsumerConfig will work properly.",8
"Update message data type when Content-Type property changes
When Content-Type property is set on a message, then payload's data type must be updated to reflect the new value.",5
"Succesful undeployment is not show in console
# Download 3.7.0-M2-SNAPSHOT  # Copy any Mule app to apps directory  # Start server  # Delete default-anchor.txt    Undeployment request is logged and is done but concole never shows that now there is only one app deployed and that default app was undeployed successfully.",1
"rename the artifact mule-extension-validations to mule-module-validation
We finally decided to not reflect the difference between a craft module and an ext-api based one on the artifact name since from a user's point of view there shouldn't be a difference",1
"IP Validator should support IPv6
IP validator should support IPv6, which is not an experimental protocol but a reality.",3
"Email validator failures
Email validator fails for the following cases    || email || is valid? ||  |  a@a.com | no (leading space) |   | a@a.com | no (trailing space) | ",1
"JSR-330 @Named and @Qualifier annotations are ignored
Because of Spring issue https://jira.spring.io/browse/SPR-12914, the @Named and @Qualifier annotations are not taken into account.    The issue can be worked around by overriding the org.springframework.beans.factory.support.DefaultListableBeanFactory#findAutowireCandidates method.    Apply a temporal fix for this and create another issue to remove that workaround until Spring fixes the issue.",5
"URL validator fails
URL Validator fails for these URLs:    Should be valid:  http://✪df.ws/123  foo://username:password@example.com:8042/over/there/index.dtb?type=animal&name=narwhal#nose  http://userid:password@example.com:8080/    Should be invalid:    http://hola.com  (trailing space)  http://hola. com  ",1
"Revisit the changes of MULE-8493 when SPR-12914 is fixed
Becaues of https://jira.spring.io/browse/SPR-12914, MULE-8493 had to be created to overcome a limitation on our JSR-330 support.    When Spring fixes the issue, the changes applied on that commit should be revisited to see if they're still needed or should be deleted",1
"Upgrade Spring to 4.1.6
Upgrade Spring to 4.1.6",1
"Message transformation must maintain original mimeType and encoding when transformer does not provide them
When a transfomer is applyed on a DefaultMuleMessage and changes its payload, then the transformer's output datatype is assigned to the message datatype.  However, transformer's output datatype not always defines mimeType and encoding. If a transformer does not change any of those fields, then the fields from original payload's datatype should be used.",3
