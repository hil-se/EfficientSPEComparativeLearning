Issue,Storypoint
"Test spock with XML importing
Test how the <clover-report> can be used together with:   * Spock Spec classes with @Unroll    * test results imported from an external XML file    Purpose of test:    * check if runtime test names recorded by Clover matches test names reported by Spock     Outcome:   * document whether it works (and how) or not",2
"Fix uncheched warnings for code instrumented by Clover
Follow up of CLOV-1399:    {quote}  I tried it with 3.2.2 same issue for every instrumented class.  [WARNING] /Users/kasperni/workspace/cake-container/cake-container/cake-container-api/target/clover/src-instrumented/org/cakeframework/container/RuntimeContainerException.java:[24,758] unchecked cast  required: I  found: java.lang.Object    It is this generated line that generates the warning:    return (I) java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(), l.getClass()  .getInterfaces(), h);    It can be solved by adding a @SuppressWarnings(""unchecked"") to the instrumented file:    @SuppressWarnings(""unchecked"")  public static <I, T extends I> I lambdaInc(final int i, final T l, final int si)  {........}   {quote}",2
"///Clover:OFF does not work with lambdas
The following piece of code fails to be instrumented  {code:java}  public class Foo {      // /CLOVER:OFF      public static void main(String[] args) {          new ConcurrentHashMap<>().computeIfAbsent(""foo"", e -> null);      }      // /CLOVER:ON  }  {code}  Results in    [ERROR] /Users/kasperni/workspace/cake-container/cake-container/cake-container-impl/target/clover/src-instrumented/org/cakeframework/internal/container/handler/Foo.java:[28,58] cannot find symbol    symbol:   variable __CLR3_2_2133133hrrnhz2t    location: class org.cakeframework.internal.container.handler.Foo",2
"clover-for-grails plugin is not working with grails.project.fork
Hello,  When I run the grails test-app command in grails 2.3.5. I get the following error:    {noformat}  Error running forked test-app: No such property: testNames for class: _Events  groovy.lang.MissingPropertyException: No such property: testNames for class: _Ev  ents          at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptByteco  deAdapter.java:50)          at org.codehaus.groovy.runtime.callsite.PogoGetPropertySite.getProperty(  PogoGetPropertySite.java:49)          at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGroovyObjec  tGetProperty(AbstractCallSite.java:231)          at _Events$_run_closure3.doCall(_Events.groovy:75)          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.  java:57)          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces  sorImpl.java:43)          at java.lang.reflect.Method.invoke(Method.java:606)          at org.springsource.loaded.ri.ReflectiveInterceptor.jlrMethodInvoke(Refl  ectiveInterceptor.java:1254)          at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:  90)          at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)          at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)          at groovy.lang.ExpandoMetaClass.invokeMethod(ExpandoMetaClass.java:1110)  {noformat}  ",2
"native2ascii error converting i18n bundles for plugin
When running with -clover.on in our CI environment (TeamCity), we are getting a weird error:    Error native2ascii error converting i18n bundles for plugin [xxxx] java.lang.reflect.InvocationTargetException    It's not constrained to a single plugin, typically it lists different plugins. The full stack trace is:    {code}  [15:28:49][Step 4/8] | Error native2ascii error converting i18n bundles for plugin [spring-security-core-1.2.7.3] java.lang.reflect.InvocationTargetException  [15:28:49][Step 4/8] | Error Error executing script TestApp: : java.lang.reflect.InvocationTargetException (NOTE: Stack trace has been filtered. Use --verbose to see entire trace.)  [15:28:49][Step 4/8] : java.lang.reflect.InvocationTargetException  [15:28:49][Step 4/8]   org.codehaus.gant.GantBuilder.invokeMethod(GantBuilder.java:99)  [15:28:49][Step 4/8]   _GrailsTest_groovy$_run_closure1.doCall(_GrailsTest_groovy:102)  [15:28:49][Step 4/8]   org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy:185)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding.withTargetEvent(GantBinding.groovy:90)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding.this$4$withTargetEvent(GantBinding.groovy)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy:185)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy)  [15:28:49][Step 4/8]   org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)  [15:28:49][Step 4/8]   TestApp$_run_closure1.doCall(TestApp:32)  [15:28:49][Step 4/8]   org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy:185)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding.withTargetEvent(GantBinding.groovy:90)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding.this$4$withTargetEvent(GantBinding.groovy)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy:185)  [15:28:49][Step 4/8]   org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy)  [15:28:49][Step 4/8]   gant.Gant$_dispatch_closure5.doCall(Gant.groovy:381)  [15:28:49][Step 4/8]   gant.Gant$_dispatch_closure7.doCall(Gant.groovy:415)  [15:28:49][Step 4/8]   gant.Gant$_dispatch_closure7.doCall(Gant.groovy)  [15:28:49][Step 4/8]   gant.Gant.withBuildListeners(Gant.groovy:427)  [15:28:49][Step 4/8]   gant.Gant.this$2$withBuildListeners(Gant.groovy)  [15:28:49][Step 4/8]   gant.Gant$this$2$withBuildListeners$0.callCurrent(Unknown Source)  [15:28:49][Step 4/8]   gant.Gant.dispatch(Gant.groovy:415)  [15:28:49][Step 4/8]   gant.Gant.this$2$dispatch(Gant.groovy)  [15:28:49][Step 4/8]   gant.Gant.invokeMethod(Gant.groovy)  [15:28:49][Step 4/8]   gant.Gant.executeTargets(Gant.groovy:591)  [15:28:49][Step 4/8]   gant.Gant.executeTargets(Gant.groovy:590)  [15:28:49][Step 4/8]   org.grails.wrapper.GrailsWrapper.main(GrailsWrapper.java:93)  [15:28:49][Step 4/8] Caused by: java.lang.reflect.InvocationTargetException  [15:28:49][Step 4/8] 	... 30 more  [15:28:49][Step 4/8] Caused by: java.util.ConcurrentModificationException  [15:28:49][Step 4/8]   com.atlassian.clover.ant.groovy.GroovycSupport.logGroovycTasks(GroovycSupport.java:102)  [15:28:49][Step 4/8]   com.atlassian.clover.ant.groovy.GroovycSupport.taskStarted(GroovycSupport.java:123)  [15:28:49][Step 4/8]   org.apache.tools.ant.Project.fireTaskStarted(Project.java:2184)  [15:28:49][Step 4/8] 	... 30 more  [15:28:49][Step 4/8] | Error Error executing script TestApp: : java.lang.reflect.InvocationTargetException  [15:28:50][Step 4/8] Process exited with code 1  {code}    Running without ""-clover.on"" removes this problem. ",2
"ClassNotFoundException when running tests in IDEA 13.1 RC with Clover enabled
Install IDEA 13.1 RC and Clover 3.2.2. Load Java project. Create a run configuration for JUnit, select ""Test kind: All in package"", select ""Before launch: Make"".    Run tests with Clover disabled - all tests are executed.     Run tests with Clover enabled - all tests are executed, but after second and next runs - ClassNotFoundException on a test class occurs. ",2
"Several tests fail with Cannot cast object ... to class 'com_cenqua_clover.CoverageRecorder'
See here for a travis build exhibiting this problem:    https://travis-ci.org/thehyve/transmart-core-db/jobs/21220075    19 tests there fail because of this problem. The culprit seems to be this line: https://github.com/thehyve/transmart-core-db/blob/5e8f0400b9ddce75e1d3d2adccf747e42bff3ee6/src/groovy/org/transmartproject/db/dataquery/clinical/TerminalConceptVariablesTabularResult.groovy#L39",3
"Rename com.cenqua to com.atlassian
Rename all references to ""Cenqua"" to ""Atlassian"". It affects:   * java packages - com.cenqua.* and com_cenqua_clover (/)   * Clover-for-Eclipse plugins and features (/)   * com.cenqua.clover:clover artifact (clover core) (/)    Optional:    Rename also Clover-for-Maven plugin from 'maven-clover2-plugin' to 'clover-maven-plugin'.     (x) The maven plugin will not be renamed. Reason? Typing 'mvn clover:setup' in a project where clover-maven-plugin is not explicitly defined in pom.xml causes that Maven resolves the 'clover:setup' as 'com.atlassian.maven.plugins:maven-clover-plugin:maven-plugin:3.7' which is wrong. So it will be very confusing for customers.    ",3
"Maven plugin sholud handle target/generated-test-sources
The AbstractInstrumenter recognizes only the target/generated-sources path:    {code:java}  private boolean isGeneratedSourcesDirectory(final String sourceRoot) {          String generatedSrcDirDefaultLifecycle = File.separator + ""target"" + File.separator + ""generated-sources"";          String generatedSrcDirCloverLifecycle = File.separator + ""target"" + File.separator + ""clover"" + File.separator + ""generated-sources"";          return sourceRoot.indexOf(generatedSrcDirDefaultLifecycle) != -1                  || sourceRoot.indexOf(generatedSrcDirCloverLifecycle) != -1;      }  {code}    It shall also detect the target/generated-test-sources.",1
"Maven clover2:setup ignores generated sources
We have several maven projects that contain only generated sources (target/generated-sources/...). The default source directory does not exist for those projects. clover2:setup does not work properly for those projects: the generated sources do not get compiled. We currently work around the issue by creating a marker file in the default source directory.",1
"Maven clover2:setup triggers duplicate class exception
We have several maven projects that have more than one source directory. The non-default directories are added using the build-helper plugin. The clover2:setup goal instruments all source folders, but then sets all non-generated directories as source folders on the maven project. That results in compile errors, since source files are both present in the clover instrumented sources and original location.    Example:  java/src << 1. default source folder  java/src-build << 2. additional source folder  target/generate-sources/jaxb << 3. generated source folder    Case (2) is causing problems.",3
"Double instrumentation error when running 'mvn site' on JDK8
Run 'mvn clean site' on the src/it/setTestFailureIgnore project using the JDK8 and Maven 2.2.1. It fails with an error:    {noformat}  [INFO] Processing files at 1.8 source level.  [INFO] Instrumentation error  com.atlassian.clover.api.CloverException: Double instrumentation detected: f:\Work\release\release-maven-clover2-plugin-hg\src\it\setTestFailureIgnore\target\clover\src-instrumented\com\atlassian\maven\plugin\clover\samples\setTestFailureIgnore\Simple.java appears to have already been instrumented by Clover.    com.atlassian.clover.instr.java.CloverTokenStreamFilter.guardAgainstDoubleInstrumentation(CloverTokenStreamFilter.java:66)  ...  {noformat}    The same site goal works correctly under JDK7.  ",1
"Invalid instrumentation code for test methods inside anonymous inline classes
Clover generates incorrect reference to the static field  __CLR3_2_2_TEST_NAME_SNIFFER in case when a test method is declared inside   an inner (static or non-static) or inside an anonymous inline class, which are located inside a non-test top-level class.     In such case, the top-level class doesn't have the __CLR3_2_2_TEST_NAME_SNIFFER field (as it's not a test class), but inner/inline classes (which are test ones) are trying to access this field.     {noformat}  [clover] 2 test methods detected.  [javac] ----------  [javac] 1. ERROR in ...  [javac] public boolean test() {__CLR3_2_262c962c9htee2hlb.R.globalSliceStart(getClass().getName(),284284);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try  {boolean $CLV_r$=__CLR3_2_2qua64563cs();$CLV_p$=1;return $CLV_r$;}    catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}_CLR3_2_262c962c9htee2hlb.R.rethrow($CLV_t2$);return false;}finally{CLR3_2_262c962c9htee2hlb.R.globalSliceEnd(getClass().getName(),""com.xyz.RuntimeDebugger.SaveTestCaseAction.getDefaultAvailablePredicate.test"",CLR3_2_2_TEST_NAME_SNIFFER.getTestName(),284284,$CLV_p$,$CLV_t$);}}private boolean __CLR3_2_2qua64563cs(){_CLR3_2_262c962c9htee2hlb.R.inc(284284);  [javac] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  [javac] __CLR3_2_2_TEST_NAME_SNIFFER cannot be resolved  [javac] ----------  [javac] 1 problem (1 error)  {noformat}    Code example:    {code:java}  public class SnifferInInnerAndInline {      interface TestAction {          boolean test();      }        static class InnerStaticTest {          public void testInnerStatic() {  // FAILS HERE            }      }        class InnerTest {          public void testInnerNonStatic() {  // FAILS HERE            }      }        TestAction testWithInline() {          return new TestAction() {              public boolean test() {  // FAILS HERE  (assuming that we have a custom test pattern which matches it)                  return true;              }          };      }        public static void main(String[] args) {          new SnifferInInnerAndInline.InnerStaticTest().testInnerStatic();          new SnifferInInnerAndInline().new InnerTest().testInnerNonStatic();          new SnifferInInnerAndInline().testWithInline().test();      }    }  {code}    ",2
"change historical report
scope: header, footer, tables with ""added"" and ""movers"",     optionally, put charts in some boxes",1
"Clover safeEval method is imcompatible with Groovy's @CompileStatic annotation
When trying to use Clover on a Groovy class that is marked @CompileStatic and it contains a null-safe operator (e.g. Bar bar = foo?.bar), then the groovyc compilation fails with the error:     No such property: bar for class: java.lang.Object    The error is that the generated {code}$CLV_safeEval${code} method returns an Object instead of the type of the property. This then causes Groovy compiler to fail later.    I've created a sample project that exhibits the problem at https://github.com/johnrengelman/clover-grooyv-compilestatic    Simply run {code}./gradlew test{code}    ",3
"Grails' controller methods are not shown as entered
Hello,  For some reason the method in a controller is marked as not entered even though the content inside is shown to be executed. Please can you help me rationalize/ understand this?    Please refer to me screenshots:  index_method_not_executed.png: to see that the index() method is not executed even though its contents are.  test_for_index_method.png: the test that is run to get the method to run.  ",3
"reduce html report size
As a developer I'd like to have small HTML report size in order to reduce disk space consumption, especially in case of builds on CI server.     Possible ways to reduce report size:    1) extract list of packages to separate JSON file and load it dynamically using JS function (instead of embedding it on virtually every page)  (/) DONE    2) use some html compression utility (which would strip all whitespace etc)       https://code.google.com/p/htmlcompressor/#Compressing_selective_content_in_Velocity_templates    (x) performance of the HtmlCompressor is unacceptable (+340% time)    3) remove whitespace from most frequent loops from velocity templates (/) DONE",3
"improve report accessiblity
http://www.w3.org/TR/wai-aria-practices/#TreeView",3
"improve navigation between report entities
We can navigate vertically and horizontally, but on a file level we've got a break:    {noformat}   project   - dashboard | app | test | results | clouds | treemap     v   package - app | test | results | clouds    |    +--------------------------------------------------+    v                                                  v   file - classes | contr tests | methods        test class                                                         v                                                       test  {noformat}    fix it so that we can jump from test file to test results for a file    fix it so that we have one ""source"" tab for a file   -> put 'classes and methods' and 'contributing tests' into expandable tables, dialogs etc  ",3
"implement global search in the html report - backend
Implement search box in a blue app header.  Generate JSON data:  * packages, files, classes, methods, tests  Split into several indexes (for smaller file size) as theoretical size is up to 40MB (200'000 objects per 200 chars).  Add ""automatic"" option (up to 10'000 elements).   (/) Add options for:   <clover report>/<current>/<format>/<globalSearch scope=""package,file,class,method,test|auto"" limit=""10000""/>  (/) Add option for HtmlReporter:  --globalSearchScope=package,file,class,method,test|auto  --globalSearchLimit=10000  to choose which elements shall be searchable.",8
"tree view is not compacted properly when only 1 package is present
!tree_view_bug.png!    We have com.cenqua + samples.money instead of exactly one (root) node named ""com.cenqua.samples.money"".   ",1
"provide explanation when number of files is greater than number of classes for a package
There might be a case that number of files > number of classes listed:    !more_files_than_classes.png!    This is normal behaviour, because by default Clover hides entities having no executable code, such as: empty classes, enums (with no methods), interfaces (with no virtual extension methods).     However, this may be confusing for end user.     How we could improve this:    1) Set the showEmpty to true by default. Benefit: 'classes >= files' in all cases. Drawback: report will contain unnecessary noise.     2) Add [(?) Help] button above the table. Example:    !package_help.png!    3) Add tooltip for 'Files'  (TotalElements.getHelp())    4) Add small text below the class table. For example:    ""3 classes are not listed because they contain no executable code.""  ",1
"replace a vertical navigation component by a sidebar
Instead of the aui-vertical-nav use the aui-sidebar component. ",3
"Upgrade HTML report to ADG 2.0 / AUI 5.7
Upgrade AUI library to 5.7.x. We may need to make some corrections of CSS to be compatible (probably: colors, shadows, notification messages).",2
"as a developer I'd like to have nanosecond precision for test duration
In reports lots of tests have duration = 0. This is because unit tests are fast and the System.currentTimeMillis() is used to record start and end time of a test. Which is not precise by design.    We could increase precision to nanoseconds using System.nanoTime().    Note: we'd still need to call System.currentTimeMillis() to record datetime when test was run.",3
"Remove ""See more"" links from the report dashboard
for:  * Most complex packages  * Most complex classes  * Least tested methods  * Class Coverage Distribution  * Class Complexity          ",1
"""Show contributing test"" change to ...
""<a>Select tests</a> to highlight the code coverage"" or something similar",1
"The ""Show methods"" link does not open the modal dialog
This happens for inner classes (i.e. when a class name contains ""."")    May be caused by a way how Modal Dialog handles element id.",1
"tool tips in dashboard widgets shall not be displayed on the right
Tool tips are by default placed on the right, so they don't fit in the 'Clover Dashboard' view:    !screenshot-1.png!",1
"use ADG fonts and colours in Cloud View in IDEA
The ADG HTML report in Clover 4 uses new colour set (shades of red instead of blue-red) for tag clouds. The Clover-for-Eclipse has this theme:    [^cloud_view_eclipse.png]    but the Clover-for-IDEA still uses the old colour set:    [^cloud_view_idea.png]",1
"AntIntegrator adds unnecessary double quotes for -Dparam=value JVM options
Class com.atlassian.clover.ci.AntIntegrator puts values of the following properties:    -Dclover.historydir and -Dclover.license.cert, -Dclover.license.path    in double quotes. On Windows platform it causes problems when a value contains space character - parameters are being split. See BAM-10740.    Add a check if OS is Windows and don't add double quotes in such case. ",1
"implement global search in the html report - frontend
Implement search box in blue app header.    Generate JSON data:   * packages, files, classes, methods, tests    Split into several indexes (for smaller file size) as theoretical size is up to 40MB (200'000 objects per 200 chars).    Add ""automatic"" option (up to 10'000 elements).     Add options for <clover report>     <index scope=""package, file, ..., method | auto"">    to choose which elements shall be searchable.",5
"View latest Clover information (BAM-14428)
See BAM-14428.",5
"Clover tab with an HTML report generated by Clover 4 shall have a vertical scroll bar (BAM-14777)
See BAM-14777.",1
"Configure Fisheye/Crucible build to use Clover 4
nan",1
"Move CloverCompilerAdapter out from org.apache.tools.ant.taskdefs package
The org.apache.tools.ant.taskdefs.CloverCompilerAdapter may cause conflicts with Apache Ant packaged as OSGI bundle which exports the same package.     Possible fix:  (x) The Javac.getFileList() is a getter for compileList. Try using it - we must ensure that compileList and replacementCompileSet have the same size or  (/) Use reflections to access the package-protected field.    Thanks to this we could move CloverCompilerAdapter  to com.atlassian.clover package. ",1
"Application Packages list is empty in Classic report
nan",1
"Instrumenting assignment of method reference to field results in reference to undefined symbol.
Instrumenting the following snippet results in the compilation error  [ERROR] clover/src-instrumented/Test.java:[2,18] cannot find symbol  [ERROR] symbol:   variable __CLR3_3_000hysmxbbd  [ERROR] location: class Test    Source:  public class Test {      Runnable r = System::currentTimeMillis;  }    Instrumented code:  /* $$ This file has been instrumented by Clover 3.3.0#2014033113020816 $$ */public class Test {      Runnable r = __CLR3_3_000hysmxbbd.lambdaInc(0,System::currentTimeMillis,1);  }  ",2
"BAM-13404 BAM-15085 Use BuildConfig to install Clover
nan",8
"BAM-13208 Automatic integration in multi-module builds
Follow the approach #1",8
"BAM-7272 BAM-10516 BAM-11151 Working subdirectory
nan",8
"BAM-14734 BAM-14907 Clover charts
https://jira.atlassian.com/browse/BAM-14734  https://jira.atlassian.com/browse/BAM-14907",5
"Release Clover 4.0.2
ant, eclipse, idea, maven, grails",2
"Resolve path to clover.jar when packed as OSGI bundle
ClassPathUtil.getCloverJarPath() searches for a JAR in case when URL returned by class loader is like:     {noformat}  jar:file:!/path/to/clover.jar/com/atlassian/clover/util/ClassPathUtil.class  {noformat}    or    {noformat}  file:/path/to/classes/directory/com/atlassian/clover/util/ClassPathUtil.class  {noformat}    However, it does not handle a case for OSGI bundles, which have an URI like:    {noformat}  bundle://28.0:2/com/atlassian/clover/util/ClassPathUtil.class  {noformat}    Fix: use getClass().getProtectionDomain().getCodeSource().getLocation().toURI()  ",1
"The Grails' @Transactional annotation conflicts with Clover's AST transformations
The @Transactional annotation is the new Grails-y way of controlling transactional behavior in a service. It uses an AST transformation to essentially wrap public methods (if added to the class) in a GrailsTransactionTemplate. So you get code that looks like this:    {code:java}  public void reject(Invoice invoice)    {      Reference invoice = new Reference(invoice);      CallSite[] arrayOfCallSite = $getCallSiteArray();      GrailsTransactionAttribute $transactionAttribute = (GrailsTransactionAttribute)ScriptBytecodeAdapter.castToType(arrayOfCallSite[9].callConstructor(GrailsTransactionAttribute.class), GrailsTransactionAttribute.class);      GrailsTransactionTemplate $transactionTemplate = (GrailsTransactionTemplate)ScriptBytecodeAdapter.castToType(arrayOfCallSite[10].callConstructor(GrailsTransactionTemplate.class, this.transactionManager, $transactionAttribute), GrailsTransactionTemplate.class);      $transactionTemplate.execute(new _reject_closure5(this, invoice));    }  {code}    The real body of the method is in the reject_closure5, which ends up calling a method named ""$tt_reject(...)"".    Clover doesn't realize that the code originally under the reject method has essentially been relocated to the $tt__reject method.    Given that @Transactional is a core part of Grails (starting in 2.3, I believe) and the recommended way to control transactions going forward, this is probably something that should be addressed in Clover core.",3
"Upgrade FastUtil library to version 6.5.2 or later
API was changed since version 4.4.3, some methods used by Clover are missing and there's no direct replacement for them. Migrate Clover's code. ",3
"Upgrade Atlassian Extras to 3.2.x
API has changed in Atlassian Extras 3.x vs 2.5. There's no   LicenseManagerFactory.getLicenseManager()    We can compose our own license manager and decoder using:  Version1LicenseDecoder + Version2LicenseDecoder + DelegatingLicenseDecoder + CloverProductLicenseFactory + DefaultLicenseManager    However, there are problems with decoding the ""Clover Desktop"" license = the CloverLicenseTest.testDesktopLicense fails.     Investigate:   * maybe Clover Desktop license format has changed?   * or maybe overlooked by atlassian-extras developers?   * or ... ?",3
"Replace iText library
Replace current iText 2.0.1 library by:   * a commercial version of iText 5.x or    * a PDFBox (http://pdfbox.apache.org) or other tool based on a good open-source license (Apache 2.0, MIT, BSD, PD).",5
"Improve HTML ADG side bar view and a package tree performance
nan",1
"Create Bitbucket Connect Clover Plugin
Bitbucket - Dan Bennett (Team Lead) - Investigate the creation of a Connect plugin to expose Clover functionality in Bitbucket diff & file viewer (same as Stash functionality)",40
"S3 Artifact handler corrupts Clover tab in Bamboo
Bamboo 5.7 introduces new artifact handler to store files in Amazon S3. Due to a fact that it works on a file-by-file basis, we cannot expose the entire HTML report as a 'site' embedded in the <iframe>. As a consequence it looks like this:    !clover-tab-with-s3-handler.png!          *Workaround:*    Do not use S3 artifact handler for builds with Clover. Default handler settings can be overridden in Plan configuration > Miscellaneous:    !artifact_handlers.png!          *Possible fixes:*    1) Implement a wrapper on S3 handler, which would download all files from an artifact definition to some temporary directory and expose it in <iframe>     * problem: Clover's reports may have up to several GB for large projects, downloading all files every time someone opens the 'Clover' tab will be time consuming, we'd need to keep such artifacts for a longer period of time    2) Add warnings for Clover integration in the UI in case when S3 handler is found. Write information about this limitation on confluence.atlassian.com.    3) Create a ZIP archive out of Clover Report artifact and give user an ability to download this file.    4) Add extra option in artifact definition so that user could select which handler should keep given artifact. Thanks to this, S3 could be excluded.     5) Due to a fact that new Clover HTML ADG reports do not contain frames, we could think about a thin wrapper, which would download only one page and replace all original links in the HTML file by proper links to S3; if user would click on a link, he would get another page processed this way...   * we'd have to handle *.js, *.css, images etc too.    5b) Create something like a ""ZIP File Handler"", which could serve files from an archive (then we could pack Clover's HTML report and store on S3 or any other medium). It would also require rewriting links.    6) Look for some solution provided by Amazon, such as Static Website Hosting on S3    http://docs.aws.amazon.com/AmazonS3/latest/dev/website-hosting-custom-domain-walkthrough.html    ",8
"Distributed Coverage does not work due to java.rmi.UnmarshalException
{noformat}  Received result: Remote_Stub[UnicastRef2 [liveRef: [endpoint:[192.168.157.181:11  98,clover.gnu.cajo.invoke.Remote$RCSF@732e103d](remote),objID:[-26c3f6bf:148ea10  98a9:-7ffb, -3801964032288496245]]]]  Started proxy: Thread-9  cutOff(java.rmi.UnmarshalException: error unmarshalling return; nested exception   is:          java.io.WriteAbortedException: writing aborted; java.io.NotSerializableE  xception: com.atlassian.clover.ErrorInfo); from: localhost:1198. Attempting to r  econnect.  {noformat}",1
"Test optimization in IDEA 14 shows wrong number of classes
There are 2 test classes in the 'Moneybags' tutorial project. Running test optimization in IDEA 14 (EAP build 138.2458.8) shows ""3 test classes"".    !idea14_clover_test_optimization.png!",2
"An orphaned lozenge when there are no search results 
!html_adg_orphaned_lozenge.png!",1
"A wrong caption in a search box in an HTML ADG report
!search_box_wrong_caption.png!",1
"A historical report contains link to an XML report
!wrong_links_in_a_historical_report.png!",1
"Upgrade third party libraries used by Clover - 2nd phase
Upgrade third party libraries to their latest versions:   * Antlr 4.0, including java.g syntax file (x) tracked in CLOV-1329, CLOV-1331 and CLOV-1332   * atlassian-extras 3.2 (x) tracked in CLOV-1553   * cajo 1.175   * commons-lang3 3.3.2 (x)   * fastutil 6.5.2 (x) tracked in CLOV-1552   * GSON 2.2.2    * JDOM 2.0.4   * JSON - replace by com.google.code.gson:gson    Upgrade feasibility to be verified:   * theJIT   * KTreeMap/JTreeMap    Get rid of:   * Overlibvms (x) not until we drop Classic reports (Clover 4.1)   * Utils.js (x) not until we drop Classic reports (Clover 4.1)   * iText (x) tracked in CLOV-1554    To be considered:   * upgrade Log4j to or 2.0.x",8
"BAM-699 BAM-2883 BAM-13786 Chart points with failed builds or no daily data
nan",5
"BAM-9048 More configuration options for automatic Clover integration
nan",5
"Test Clover-for-IDEA compatibility with IDEA 14
nan",2
"Add additional logging for <clover-setup>/<files> element
Currently, when <clover-setup> contains a <fileset> element, Clover prints information about included/excluded files (on a verbose logging level).    In <clover-setup> we can also use a similar <files> element - but there's no logging for it. Add logging on a verbose level.",1
"Insert Clover goals between original ones
    add ""clover2:setup"" after the ""clean"" (if present) and before other goals          but ""jaxb2:generate clover2:setup""          but ""wsdl2java clover2:setup""  ",3
"Add warnings in UI about install/deploy phases
    what to do in case when ""install"" or ""deploy"" phase is declared? deploying instrumented JARs shall be avoided in general          write help for ""automatically integrate clover"" radio button?          write warning in UI if such goals are found?          write warning in a build log if such goals are found?  ",3
"Prepare Bamboo documentation about the change
* Write big warning in the Bamboo 5.8 Release Notes what do to with Clover-enabled plans before upgrading  * Update ""Enabling the Clover add-on"" page (how it works for maven in bamboo 5.8 and 5.7)  * Update answers.a.c questions about this problem and CLOVERKB too  ",2
"Integrate Clover with JUnitParams
The JUnitParams (https://github.com/Pragmatists/junitparams) is much more convenient way to parameterize tests instead of using JUnit's 4.10 @Parameterized annotation. ",5
"Clover does not work with Grails 2.4.4
When developers use ""./grailsw run-app"" it gives the following error.     {noformat}  Running Grails application  Error Error loading event script from file [/opt/stanson/target/work/plugins/clover-4.0.2/scripts/_Events.groovy] startup failed:  /opt/stanson/target/work/plugins/clover-4.0.2/scripts/_Events.groovy: 4: unable to resolve class org.codehaus.groovy.grails.test.GrailsTestTargetPattern  @ line 4, column 1.  import org.codehaus.groovy.grails.test.GrailsTestTargetPattern  ^  1 error  (Use --stacktrace to see the full trace)  {noformat}",3
"Use heuristics to solve JDK8 Stream compilation errors
Spike in which a problem with Java8 streams will be attacked as it seems that using stream() is very popular and the most probably it causes the majority of compilation problems with Clover's lambdaInc().    Scope: focus on streams only.    Out of scope: attacking a generic problem of method signatures with a mixture of functional and non-functional arguments. ",13
"Set instrumentLambda=none as a default value for instrumentation
This is a temporary workaround thanks to which java8 code will always compile, at the cost that lambdas are not measured. User will be still able to enable lambda instrumentation, but this will be a conscious decision, so seeing compilation errors should be less surprising.     Scope: CloverInstr, ant, maven, idea, eclipse, grails plugins.",1
"CloverOptimizedTestNGSelector does not add ""clover-optimized"" group to TestNG @Before and @After annotations
In order for Clover to optimize a TestNG test suite, we have to use the {{CloverOptimizedTestNGSelector}} listener, and restrict TestNG to only run the ""clover-optimized"" group, as in:  {code:xml|title=build.xml snippet}  <testng groups=""clover-optimized"" listeners=""com.atlassian.clover.ant.tasks.testng.CloverOptimizedTestNGSelector"" >        <!-- ... -->    </testng>  {code}    The problem with this is that TestNG's {{@Before}} and {{@After}} annotations ({{@BeforeMethod}}, {{@AfterClass}}, etc) will not be run, because they are not part of the ""clover-optimized"" group.    I have a workaround, which is to qualify all such annotations with {{alwaysRun=true}}, but this is pretty ugly.    A possible solution is for {{CloverOptimizedTestNGSelector}} to implement {{IAnnotationTransformer2}} and override [transform( IConfigurationAnnotation, Class, Constructor, Method )|http://testng.org/javadoc/org/testng/IAnnotationTransformer2.html#transform%28org.testng.annotations.IConfigurationAnnotation,%20java.lang.Class,%20java.lang.reflect.Constructor,%20java.lang.reflect.Method%29], automatically adding the ""clover-optimized"" group to all non-tests.",1
"Replace clover.licenseLocation by maven.clover.licenseLocation
While it's perfectly fine to have a declaration like this:    {code:xml}  <properties>    <clover.licenseLocation>clover.license</clover.licenseLocation>  </properties>  {code}     and next refer it in maven-clover2-plugin's configuration like this:    {code:xml}  <configuration>     <licenseLocation>${clover.licenseLocation}</licenseLocation>  </configuration>  {code}    it's misleading for users, because in case they would like to pass it via -D parameter or declare in settings.xml without having the <licenseLocation> in maven-clover2-plugin section, it will not work, because the correct property name is 'maven.clover.licenseLocation'. See:    https://docs.atlassian.com/maven-clover2-plugin/latest/setup-mojo.html#licenseLocation      Correct all references in documentation on confluence.atlassian.com, answers.atlassian.com, maven-clover2-plugin source code, tutorial source code.   ",1
"Java8: method reference to a non-static method fails to compile
{quote}  *NOT REPRODUCIBLE*  {quote}    In this code sample:    {code:java}  return map.entrySet().stream()  			.collect(Collectors.toMap(  				Map.Entry::getKey,  				e -> e.getValue().getAverage()  			));  {code}    the Collectors.toMap() takes a ""Map.Entry::getKey"" method reference as input argument. However, the getKey method is not static.     Wrapping it by Clover's lambdaInc() method leads to a compilation error like this:    {noformat}      [javac]   symbol:   method lambdaInc(int,Map.Entry::getKey,int)      [javac]   location: class __CLR4_0_22ci2cii4lxhoaj      [javac]  Foo.java:33: error: invalid method reference      [javac] 					__CLR4_0_22ci2cii4lxhoaj.lambdaInc(3045,Map.Entry::getKey,3046),      [javac] 					                                           ^      [javac]   non-static method getKey() cannot be referenced from a static context      [javac]   where K is a type-variable:      [javac]     K extends Object declared in interface Entry  {noformat}                  *Possible workarounds ??*    1) Disable instrumentation of expression-like lambda functions (method references are treated as expression-like lambda) - use instrumentLambda=""block"" or ""none"".    2) Wrap such method reference with ///CLOVER:OFF and ///CLOVER:ON keywords, e.g.:    {code:java}  return map.entrySet().stream()  			.collect(Collectors.toMap(  ///CLOVER:OFF  				Map.Entry::getKey,  ///CLOVER:ON  				e -> e.getValue().getAverage()  			));  {code}    3) Use a variable with a non-static method reference or change to a lambda expression.    {code:java}  return map.entrySet().stream()  			.collect(Collectors.toMap(  				e -> e.getKey(), // unfortunately IDEA suggests to change it back  				e -> e.getValue().getAverage()  			));  {code}    ",3
"Java8: don't instrument lambda functions when source < 1.8
No matter what ""-source"" value is set, Clover instruments both expression-like and block-like lambdas.     It's a behaviour slightly different from the one we have for e.g.:   * -source 1.3 (it handles 'assert' as not a keyword) or    * -source 1.4 (no 'enums').     Ways to improve it:    1) change Java grammar so that handling lambda functions is optional - only for source >= 1.8; otherwise Clover should throw a parse error      2) or parse lambdas also for source < 1.8 (no parse errors would be thrown, only javac will raise a compilation error), but do not add Clover's instrumentation to it    {code:java}  private LambdaBlockEntryEmitter instrEnterLambdaBlock(MethodSignature lambdaSignature, CloverToken leftCurly) {          if (cfg.getInstrumentLambda() == LambdaInstrumentation.ALL || cfg.getInstrumentLambda() == LambdaInstrumentation.BLOCK  /* add source level check*/ ) {      ...  {code}    ",1
"New colour scheme for a tag cloud and a coverage treemap in the HTML report
Customers reported that using a single, red color gradient in a coverage tree map and in tag clouds has two drawbacks:   * it's harder to find which code areas require improvement   * seeing always a red color is discouraging  :-)    ",2
"Support Groovy 2.4.0 in Clover
nan",2
"Clover doesn't support Spock 1.0 and 1.0-SNAPSHOT
It works with Spock v0.7-groovy-2.0, but it doesn't work with Spock v1.0-groovy-2.0-SNAPSHOT.    The root cause is that the IGlobalExtension interface changed and it now has start() and stop() methods, which the v0.7 version did not have, and so an AbstractMethodError: null is thrown:    {code}  java.lang.AbstractMethodError: null          at org.spockframework.runtime.GlobalExtensionRegistry.startGlobalExtensions(GlobalExtensionRegistry.java:105)          at org.spockframework.runtime.RunContext.start(RunContext.java:63)          at org.spockframework.runtime.RunContext.get(RunContext.java:165)          at org.spockframework.runtime.Sputnik.runExtensionsIfNecessary(Sputnik.java:88)          at org.spockframework.runtime.Sputnik.run(Sputnik.java:61)          at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)          at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)          at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)  {code}    Because of this, we cannot use the most recent features in Spock, since v0.7 is more than 2 years old.",2
"Clover fails to generate HTML report for more than one project in Eclipse
    {noformat}  Clover Version 4.0.3, built on January 27 2015 (build-dev)  Loaded from: D:\Soft\Eclipse\eclipse-4.4-luna\plugins\com.atlassian.clover.eclipse.core_4.0.3.v20150127120908-dev.jar  Clover: Developer License registered to Atlassian.  [C:/Users/Marek/.workspace-eclipse-4.4/Moneybags/.clover/coverage.db, 0 seconds""C:/Users/Marek/.workspace-eclipse-4.4/javasyntax18/.clover/coverage.db, 0 seconds--report, --testsIncludePattern, C:/Users/Marek/.workspace-eclipse-4.4/Moneybags/**/*Test.java, C:/Users/Marek/.workspace-eclipse-4.4/Moneybags/**/Test*.java, C:/Users/Marek/.workspace-eclipse-4.4/javasyntax18/**/*Test.java, C:/Users/Marek/.workspace-eclipse-4.4/javasyntax18/**/Test*.java--testsExcludePattern, C:/Users/Marek/.workspace-eclipse-4.4/Moneybags/, C:/Users/Marek/.workspace-eclipse-4.4/javasyntax18/, -a, -i, C:\Users\Marek\AppData\Local\Temp\clover3525180172645953949merge, -o, C:\Users\Marek\Desktop, -t, Coverage Report, -tc, 0, -f, , -s, 0 days]  Error generating report: java.lang.NumberFormatException  java.lang.NumberFormatException    java.math.BigDecimal.<init>(BigDecimal.java:459)    java.math.BigDecimal.<init>(BigDecimal.java:728)    com.atlassian.clover.cfg.Interval.initialise(Interval.java:183)    com.atlassian.clover.cfg.Interval.<init>(Interval.java:121)    com.atlassian.clover.eclipse.core.reports.MergeReportJob$MergeAndReport.run(MergeReportJob.java:140)    com.atlassian.clover.eclipse.core.reports.ForkingReporter.main(ForkingReporter.java:25)  {noformat}  ",1
"Unable to open generated reports in Eclipse 4.4
Steps to reproduce:    Open ""Coverage Exploer"", click ""Run new report ..."" and create any report. Next click ""View report"" and select it on a list. Nothing happens in the UI and the ""Error log"" view shows ""Unhandled event exception"" entry with a stack trace as follows:    {noformat}  java.lang.NoClassDefFoundError: Could not initialize class com.atlassian.clover.eclipse.core.reports.OpenReportOperation    com.atlassian.clover.eclipse.core.views.actions.GenerateReportAction$2.widgetSelected(GenerateReportAction.java:151)    org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)    org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)    org.eclipse.swt.widgets.Display.sendEvent(Display.java:4353)    org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)    org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4172)    org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3761)    org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1151)    org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)    org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1032)    org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:148)    org.eclipse.ui.internal.Workbench$5.run(Workbench.java:636)    org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)    org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:579)    org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)    org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:135)    org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)    org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)    org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)    org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:382)    org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:236)    sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)    sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)    java.lang.reflect.Method.invoke(Unknown Source)    org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)    org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)    org.eclipse.equinox.launcher.Main.run(Main.java:1465)  {noformat}    ",1
